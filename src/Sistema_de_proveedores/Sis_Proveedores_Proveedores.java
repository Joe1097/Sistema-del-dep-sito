/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sistema_de_proveedores;

import Clases.Proveedor;
import static Menu.Menu_Principal.proveedores;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author José Manuel Carrillo Torres
 */
public final class Sis_Proveedores_Proveedores extends javax.swing.JFrame {

    DefaultTableModel dfm_AltaProveedor;
    DefaultTableModel dfm_BajaProveedor;
    DefaultTableModel dfm_CambiosProveedor;
    DefaultTableModel dfm_ConsultasProveedor;
    
    List<Integer> cambios_provs;
    List<String> cambios_provs_nom;
    
    List<Integer> rows_de_provs_seleccionados;
    List<Proveedor> provs_originales;
    /**
     * Creates new form FormProvedores
     */
    public Sis_Proveedores_Proveedores() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.dfm_AltaProveedor = (DefaultTableModel) jTable_AltaProveedor.getModel();
        this.dfm_BajaProveedor = (DefaultTableModel) jTable_BajaProveedor.getModel();
        this.dfm_CambiosProveedor = (DefaultTableModel) jTable_CambiosProveedor.getModel();
        this.dfm_ConsultasProveedor = (DefaultTableModel) jTable_ConsultaProveedor.getModel();
        cambios_provs = new ArrayList<>();
        cambios_provs_nom = new ArrayList<>();
        
        rows_de_provs_seleccionados = new ArrayList<>();
        provs_originales = new ArrayList<>();
        
        VistaParaGerente(Menu.Iniciando_Sistema.gerente);  
        
        ListSelectionModel model=jTable_CambiosProveedor.getSelectionModel();
        model.addListSelectionListener((ListSelectionEvent e) -> {
            int row=jTable_CambiosProveedor.getSelectedRow();
            if(jTable_CambiosProveedor.getSelectedRow()>=0&&!rows_de_provs_seleccionados.contains(row)){
                int a=Integer.parseInt(dfm_CambiosProveedor.getValueAt(row,0).toString());
                String b=dfm_CambiosProveedor.getValueAt(row,1).toString();
                long c=Long.parseLong(dfm_CambiosProveedor.getValueAt(row,2).toString());
                String d=dfm_CambiosProveedor.getValueAt(row,3).toString();
                int ee=Integer.parseInt(dfm_CambiosProveedor.getValueAt(row,4).toString());
                int f=Integer.parseInt(dfm_CambiosProveedor.getValueAt(row,5).toString());
                String g=dfm_CambiosProveedor.getValueAt(row,6).toString();                 
                int h=Integer.parseInt(dfm_CambiosProveedor.getValueAt(row,7).toString());
                String j=dfm_CambiosProveedor.getValueAt(row,8).toString();
                String k=dfm_CambiosProveedor.getValueAt(row,9).toString();
                rows_de_provs_seleccionados.add(row);
                provs_originales.add(new Proveedor(a,b,c,d,ee,f,g,h,j,k));
            } 
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton_AltaProveedor_DarDeAlta = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_AltaProveedor = new javax.swing.JTable();
        jButton_AltaProveedor_NuevoProveedor = new javax.swing.JButton();
        jButton_AltaProveedor_LimpiarTabla = new javax.swing.JButton();
        jButton_AltaProveedor_RemoverProveedor = new javax.swing.JButton();
        jPanel_BajaProveedor = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_BajaProveedor = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTextField_BajaProveedor_NombreProveedor = new javax.swing.JTextField();
        jButton_BajaProveedor_DarDeBaja = new javax.swing.JButton();
        jPanel_CambiosProveedor = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_CambiosProveedor = new javax.swing.JTable();
        jButton_CambiosProveedor_GuardarCambios = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField_CambiosProveedor_NombreProveedor = new javax.swing.JTextField();
        jPanel_ConsultaProveedor = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ConsultaProveedor = new javax.swing.JTable();
        jComboBox_ConsultaProveedor_CriterioBusqueda = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jTextField_ConsultaProveedor_ValorCriterio = new javax.swing.JTextField();
        jButton_ConsultaProveedor_Consultar = new javax.swing.JButton();
        jCheckBox_ConsultaProveedor_Descendente = new javax.swing.JCheckBox();
        jButton_ConsultaProveedor_LimpiarTabla = new javax.swing.JButton();
        jButton_AbrirModuloProductos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton_AbrirMenuPrincipal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Módulo de proveedores");

        jLabel5.setText("Ingrese los datos de el o los proveedores a dar de alta en la siguiente tabla");

        jButton_AltaProveedor_DarDeAlta.setText("Dar de Alta");
        jButton_AltaProveedor_DarDeAlta.setEnabled(false);
        jButton_AltaProveedor_DarDeAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProveedor_DarDeAltaActionPerformed(evt);
            }
        });

        jTable_AltaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de proveedor", "Nombre", "Teléfono", "Calle", "Número", "Interior", "Colonia", "C.P.", "Municipio", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_AltaProveedor.setEnabled(false);
        jTable_AltaProveedor.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable_AltaProveedor);

        jButton_AltaProveedor_NuevoProveedor.setText("Nuevo proveedor");
        jButton_AltaProveedor_NuevoProveedor.setEnabled(false);
        jButton_AltaProveedor_NuevoProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProveedor_NuevoProveedorActionPerformed(evt);
            }
        });

        jButton_AltaProveedor_LimpiarTabla.setText("Limpiar tabla");
        jButton_AltaProveedor_LimpiarTabla.setEnabled(false);
        jButton_AltaProveedor_LimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProveedor_LimpiarTablaActionPerformed(evt);
            }
        });

        jButton_AltaProveedor_RemoverProveedor.setText("Remover  proveedor");
        jButton_AltaProveedor_RemoverProveedor.setEnabled(false);
        jButton_AltaProveedor_RemoverProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProveedor_RemoverProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AltaProveedor_NuevoProveedor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_AltaProveedor_LimpiarTabla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_AltaProveedor_RemoverProveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AltaProveedor_DarDeAlta)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton_AltaProveedor_NuevoProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_AltaProveedor_DarDeAlta)
                    .addComponent(jButton_AltaProveedor_LimpiarTabla)
                    .addComponent(jButton_AltaProveedor_RemoverProveedor))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Alta proveedor", jPanel1);

        jPanel_BajaProveedor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_BajaProveedorComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_BajaProveedorComponentShown(evt);
            }
        });

        jTable_BajaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de proveedor", "Nombre", "Teléfono", "Calle", "Número", "Interior", "Colonia", "C.P.", "Municipio", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_BajaProveedor.setEnabled(false);
        jTable_BajaProveedor.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable_BajaProveedor);

        jLabel4.setText("Escriba el nombre del proveedor y haga clic en la fila para poder dar de baja:");

        jTextField_BajaProveedor_NombreProveedor.setEnabled(false);
        jTextField_BajaProveedor_NombreProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_BajaProveedor_NombreProveedorKeyTyped(evt);
            }
        });

        jButton_BajaProveedor_DarDeBaja.setText("Dar de baja");
        jButton_BajaProveedor_DarDeBaja.setEnabled(false);
        jButton_BajaProveedor_DarDeBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BajaProveedor_DarDeBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_BajaProveedorLayout = new javax.swing.GroupLayout(jPanel_BajaProveedor);
        jPanel_BajaProveedor.setLayout(jPanel_BajaProveedorLayout);
        jPanel_BajaProveedorLayout.setHorizontalGroup(
            jPanel_BajaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BajaProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BajaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(jPanel_BajaProveedorLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_BajaProveedor_NombreProveedor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_BajaProveedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_BajaProveedor_DarDeBaja)))
                .addContainerGap())
        );
        jPanel_BajaProveedorLayout.setVerticalGroup(
            jPanel_BajaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BajaProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BajaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_BajaProveedor_NombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_BajaProveedor_DarDeBaja)
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Baja proveedor", jPanel_BajaProveedor);

        jPanel_CambiosProveedor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_CambiosProveedorComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_CambiosProveedorComponentShown(evt);
            }
        });

        jTable_CambiosProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de proveedor", "Nombre", "Teléfono", "Calle", "Número", "Interior", "Colonia", "C.P.", "Municipio", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_CambiosProveedor.setEnabled(false);
        jTable_CambiosProveedor.setGridColor(new java.awt.Color(153, 153, 153));
        jTable_CambiosProveedor.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable_CambiosProveedor);

        jButton_CambiosProveedor_GuardarCambios.setText("Guardar cambios");
        jButton_CambiosProveedor_GuardarCambios.setEnabled(false);
        jButton_CambiosProveedor_GuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CambiosProveedor_GuardarCambiosActionPerformed(evt);
            }
        });

        jLabel3.setText("Escriba el nombre del proveedor y haga los cambios deseados:");

        jTextField_CambiosProveedor_NombreProveedor.setEnabled(false);
        jTextField_CambiosProveedor_NombreProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_CambiosProveedor_NombreProveedorKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel_CambiosProveedorLayout = new javax.swing.GroupLayout(jPanel_CambiosProveedor);
        jPanel_CambiosProveedor.setLayout(jPanel_CambiosProveedorLayout);
        jPanel_CambiosProveedorLayout.setHorizontalGroup(
            jPanel_CambiosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CambiosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CambiosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CambiosProveedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_CambiosProveedor_GuardarCambios))
                    .addGroup(jPanel_CambiosProveedorLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_CambiosProveedor_NombreProveedor)))
                .addContainerGap())
        );
        jPanel_CambiosProveedorLayout.setVerticalGroup(
            jPanel_CambiosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CambiosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CambiosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_CambiosProveedor_NombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_CambiosProveedor_GuardarCambios)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cambios proveedor", jPanel_CambiosProveedor);

        jPanel_ConsultaProveedor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_ConsultaProveedorComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_ConsultaProveedorComponentShown(evt);
            }
        });

        jLabel2.setText("Seleccione el criterio de consulta:");

        jTable_ConsultaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de proveedor", "Nombre", "Teléfono", "Calle", "Número", "Interior", "Colonia", "C.P.", "Municipio", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_ConsultaProveedor.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable_ConsultaProveedor);

        jComboBox_ConsultaProveedor_CriterioBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos los proveedores", "Por número", "Por nombre", "Por teléfono", "Por calle", "Por número", "Por interior", "Por colonia", "Por C.P.", "Por municipio", "Por estado" }));
        jComboBox_ConsultaProveedor_CriterioBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ConsultaProveedor_CriterioBusquedaItemStateChanged(evt);
            }
        });

        jLabel11.setText("Ingrese el valor del criterio:");

        jTextField_ConsultaProveedor_ValorCriterio.setEnabled(false);

        jButton_ConsultaProveedor_Consultar.setText("Consultar");
        jButton_ConsultaProveedor_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConsultaProveedor_ConsultarActionPerformed(evt);
            }
        });

        jCheckBox_ConsultaProveedor_Descendente.setText("Descendente");
        jCheckBox_ConsultaProveedor_Descendente.setEnabled(false);

        jButton_ConsultaProveedor_LimpiarTabla.setText("Limpiar tabla");
        jButton_ConsultaProveedor_LimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConsultaProveedor_LimpiarTablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ConsultaProveedorLayout = new javax.swing.GroupLayout(jPanel_ConsultaProveedor);
        jPanel_ConsultaProveedor.setLayout(jPanel_ConsultaProveedorLayout);
        jPanel_ConsultaProveedorLayout.setHorizontalGroup(
            jPanel_ConsultaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ConsultaProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ConsultaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel_ConsultaProveedorLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_ConsultaProveedor_CriterioBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_ConsultaProveedor_ValorCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox_ConsultaProveedor_Descendente)
                        .addGap(14, 14, 14)
                        .addComponent(jButton_ConsultaProveedor_Consultar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ConsultaProveedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_ConsultaProveedor_LimpiarTabla)))
                .addContainerGap())
        );
        jPanel_ConsultaProveedorLayout.setVerticalGroup(
            jPanel_ConsultaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ConsultaProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ConsultaProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_ConsultaProveedor_CriterioBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField_ConsultaProveedor_ValorCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ConsultaProveedor_Consultar)
                    .addComponent(jCheckBox_ConsultaProveedor_Descendente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_ConsultaProveedor_LimpiarTabla)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta proveedor", jPanel_ConsultaProveedor);

        jButton_AbrirModuloProductos.setText("Abrir Módulo de productos");
        jButton_AbrirModuloProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbrirModuloProductosActionPerformed(evt);
            }
        });

        jLabel1.setText("Elija una de las siguientes pestañas para realizar un movimiento con respecto a los proveedores:");

        jButton_AbrirMenuPrincipal.setText("Abrir menú principal");
        jButton_AbrirMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbrirMenuPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_AbrirMenuPrincipal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AbrirModuloProductos))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_AbrirModuloProductos)
                    .addComponent(jButton_AbrirMenuPrincipal))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void VistaParaGerente(boolean gerente){
        if(gerente){
           jTable_AltaProveedor.setEnabled(true);
           jButton_AltaProveedor_DarDeAlta.setEnabled(true);
           jButton_AltaProveedor_NuevoProveedor.setEnabled(true);
           jButton_AltaProveedor_LimpiarTabla.setEnabled(true);
           jButton_AltaProveedor_RemoverProveedor.setEnabled(true);  
           jTable_BajaProveedor.setEnabled(true);
           jButton_BajaProveedor_DarDeBaja.setEnabled(true);
           jTextField_BajaProveedor_NombreProveedor.setEnabled(true);
           jTable_BajaProveedor.setEnabled(true);
           jTextField_CambiosProveedor_NombreProveedor.setEnabled(true);
           jTable_CambiosProveedor.setEnabled(true);
           jButton_CambiosProveedor_GuardarCambios.setEnabled(true);
        }    
    }
    
    void ActualizarProveedores(){
        try{
            FileWriter fw = new FileWriter("Proveedores.txt");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            int c=0;
            for(int j=0;j<proveedores.size();j++){
                if(c==0)
                    pw.write(proveedores.get(j).getId()+"|"+proveedores.get(j).getNombre()+"|"+proveedores.get(j).getTelefono()+"|"+proveedores.get(j).getCalle()+"|"+proveedores.get(j).getNumero()+"|"+proveedores.get(j).getInterior()+"|"+proveedores.get(j).getColonia()+"|"+proveedores.get(j).getCp()+"|"+proveedores.get(j).getInterior()+"|"+proveedores.get(j).getMunicipio()+"|"+proveedores.get(j).getEstado());
                else
                    pw.append("\r\n"+proveedores.get(j).getId()+"|"+proveedores.get(j).getNombre()+"|"+proveedores.get(j).getTelefono()+"|"+proveedores.get(j).getCalle()+"|"+proveedores.get(j).getNumero()+"|"+proveedores.get(j).getInterior()+"|"+proveedores.get(j).getColonia()+"|"+proveedores.get(j).getCp()+"|"+proveedores.get(j).getInterior()+"|"+proveedores.get(j).getMunicipio()+"|"+proveedores.get(j).getEstado());
                c++;
            }
            pw.close();
            bw.close();
            fw.close();
        }
        catch (IOException ex){}
    }
    private void jButton_AbrirModuloProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbrirModuloProductosActionPerformed
        while(dfm_AltaProveedor.getRowCount() > 0){dfm_AltaProveedor.removeRow(0);}
        while(dfm_BajaProveedor.getRowCount() > 0){dfm_BajaProveedor.removeRow(0);}
        while(dfm_ConsultasProveedor.getRowCount() > 0){dfm_ConsultasProveedor.removeRow(0);}
        while(dfm_CambiosProveedor.getRowCount() > 0){dfm_CambiosProveedor.removeRow(0);}
        Sis_Proveedores_Productos fp = new Sis_Proveedores_Productos();
        this.dispose();
        fp.setVisible(true);
    }//GEN-LAST:event_jButton_AbrirModuloProductosActionPerformed

    private void jButton_AltaProveedor_DarDeAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProveedor_DarDeAltaActionPerformed
        if(jTable_AltaProveedor.isEditing())
            jTable_AltaProveedor.getCellEditor().stopCellEditing();
        int provee_nuevos=0;
            for(int i=dfm_AltaProveedor.getRowCount()-1;i>=0;i--){                                    
                try{                    
                    int a=Integer.parseInt(dfm_AltaProveedor.getValueAt(i,0).toString());
                    String b=dfm_AltaProveedor.getValueAt(i,1).toString();
                    b=b.substring(0, 1).toUpperCase()+b.substring(1);
                    long c=Long.parseLong(dfm_AltaProveedor.getValueAt(i,2).toString());
                    String d=dfm_AltaProveedor.getValueAt(i,3).toString();
                    int e=Integer.parseInt(dfm_AltaProveedor.getValueAt(i,4).toString());
                    int f=Integer.parseInt(dfm_AltaProveedor.getValueAt(i,5).toString());
                    String g=dfm_AltaProveedor.getValueAt(i,6).toString();                 
                    int h=Integer.parseInt(dfm_AltaProveedor.getValueAt(i,7).toString());
                    String j=dfm_AltaProveedor.getValueAt(i,8).toString();
                    String k=dfm_AltaProveedor.getValueAt(i,9).toString();
                    if(b.contains("|")||d.contains("|")||g.contains("|")||j.contains("|")||k.contains("|"))
                        JOptionPane.showMessageDialog(null, "Por favor evite el uso del caracter \"|\"", "Atención",JOptionPane.WARNING_MESSAGE);
                    else{
                        if(a<0||c<0||e<0||f<0||h<0){
                            JOptionPane.showMessageDialog(null, "Por favor escriba valores positivos", "Atención",JOptionPane.WARNING_MESSAGE); 
                        }
                        else{
                            int diferente=0;
                            for(Proveedor p:proveedores){
                                if(b.toUpperCase().equals(p.getNombre().toUpperCase()))
                                    diferente=1;
                            }
                            if(diferente==0){
                                int opcion = JOptionPane.showConfirmDialog(null, "¿Dar de alta este nuevo proveedor?", "Confirmar alta de proveedor", JOptionPane.YES_NO_OPTION);
                                if(opcion==0){
                                    proveedores.add(new Proveedor(a,b,c,d,e,f,g,h,j,k)); 
                                    provee_nuevos++;
                                    dfm_AltaProveedor.removeRow(i);
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Ese proveedor ya existe", "Atención",JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }
                }
                catch(Throwable e){ 
                    JOptionPane.showMessageDialog(null, "Ingrese correctamente los datos", "Atención",JOptionPane.WARNING_MESSAGE);
                    while(dfm_AltaProveedor.getRowCount() > 0){dfm_AltaProveedor.removeRow(0);}
                }
            } 
            if(provee_nuevos==1){
                JOptionPane.showMessageDialog(null, "Proveedor registrado", "Información",JOptionPane.INFORMATION_MESSAGE);
            }
            else if(provee_nuevos>1)
                JOptionPane.showMessageDialog(null, "Proveedores registrados", "Información",JOptionPane.INFORMATION_MESSAGE);     
            ActualizarProveedores();
    }//GEN-LAST:event_jButton_AltaProveedor_DarDeAltaActionPerformed

    private void jButton_CambiosProveedor_GuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CambiosProveedor_GuardarCambiosActionPerformed
        if(jTable_CambiosProveedor.isEditing())
            jTable_CambiosProveedor.getCellEditor().stopCellEditing();
        int nprovs=0;
        for(int i=0;i<rows_de_provs_seleccionados.size();i++){
            try{        
                    int id=Integer.parseInt(dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),0).toString());
                    String nombre=dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),1).toString();
                    long telefono=Long.parseLong(dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),2).toString());
                    String calle=dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),3).toString();
                    int numero=Integer.parseInt(dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),4).toString());
                    int interior=Integer.parseInt(dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),5).toString());
                    String colonia=dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),6).toString();                 
                    int cp=Integer.parseInt(dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),7).toString());
                    String municipio=dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),8).toString();
                    String estado=dfm_CambiosProveedor.getValueAt(rows_de_provs_seleccionados.get(i),9).toString();
                if(nombre.contains("|")||calle.contains("|")||colonia.contains("|")||municipio.contains("|")||estado.contains("|"))
                    JOptionPane.showMessageDialog(null, "Por favor evite el uso del caracter \"|\"", "Atención",JOptionPane.WARNING_MESSAGE);
                else{
                    if(id<0||telefono<0||numero<0||interior<0||cp<0){
                       JOptionPane.showMessageDialog(null, "Por favor escriba valores positivos", "Atención",JOptionPane.WARNING_MESSAGE); 
                    }
                    else{
                        if(nombre.endsWith(" ")||calle.endsWith(" ")||colonia.endsWith(" ")||municipio.endsWith(" ")||estado.endsWith(" ")||nombre.equals("")||calle.equals("")||colonia.equals("")||municipio.equals("")||estado.equals(""))
                            JOptionPane.showMessageDialog(null, "Por favor no deje valores en blanco", "Atención",JOptionPane.WARNING_MESSAGE);  
                        else{
                            int diferente=0;
                            for(Proveedor p:proveedores){
                                if(nombre.toUpperCase().equals(p.getNombre().toUpperCase())){
                                    if(id!=p.getId())
                                        diferente=1;
                                }
                            }
                            if(diferente==0){
                                String p_n=String.valueOf(id)+nombre+String.valueOf(telefono)+calle+String.valueOf(numero)+String.valueOf(interior)+String.valueOf(cp)+municipio+estado;
                                String p_o=String.valueOf(provs_originales.get(i).getId())+provs_originales.get(i).getNombre()+String.valueOf(provs_originales.get(i).getTelefono())+String.valueOf(provs_originales.get(i).getCalle())+String.valueOf(provs_originales.get(i).getNumero())+String.valueOf(provs_originales.get(i).getInterior())+String.valueOf(provs_originales.get(i).getCp())+String.valueOf(provs_originales.get(i).getMunicipio())+String.valueOf(provs_originales.get(i).getEstado());
                                if(!p_n.equals(p_o)){
                                    int opcion = JOptionPane.showConfirmDialog(null, "¿Guardar los cambios hechos al proveedor \""+provs_originales.get(i).getNombre()+"\"?", "Confirmar cambios", JOptionPane.YES_NO_OPTION);
                                    if(opcion==0){
                                        Proveedor proveedor_nuevo=new Proveedor (id,nombre,telefono,calle,numero,interior,colonia,cp,municipio,estado);                                
                                        for(int j=0;j<proveedores.size();j++){
                                            if(proveedores.get(j).getNumero()==provs_originales.get(i).getNumero())
                                                proveedores.set(j, proveedor_nuevo);
                                                //proveedores.remove(proveedores.get(j));
                                        }
//                                        proveedores.add(proveedor_nuevo);
//                                        Collections.sort(proveedores,new Comparator<Proveedor>(){  // Codigo para ordenar los elementos del ArrayList en orden ascendente de acuerdo al numero
//                                            public int compare(Proveedor p1, Proveedor p2){
//                                                return Integer.valueOf(p1.getNumero()).compareTo (p2.getNumero());
//                                            }
//                                        });  
                                        nprovs++;
                                    }
                                } 
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Ese proveedor ya existe", "Atención",JOptionPane.WARNING_MESSAGE);
                            } 
                        }
                    } 
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Ingrese correctamente los datos ", "Atención",JOptionPane.WARNING_MESSAGE);}   
        }
        if(nprovs>0){
            JOptionPane.showMessageDialog(null, "Los cambios han sido guardados", "Información",JOptionPane.INFORMATION_MESSAGE); 
            ActualizarProveedores();
        }        
        while(dfm_CambiosProveedor.getRowCount() > 0){dfm_CambiosProveedor.removeRow(0);}    
        for(Proveedor p: proveedores){
            dfm_CambiosProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
        rows_de_provs_seleccionados.clear(); 
        provs_originales.clear();
    }//GEN-LAST:event_jButton_CambiosProveedor_GuardarCambiosActionPerformed

    private void jButton_AbrirMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbrirMenuPrincipalActionPerformed
        Menu.Menu_Principal mi = new Menu.Menu_Principal();
        this.dispose();
        mi.setVisible(true);
    }//GEN-LAST:event_jButton_AbrirMenuPrincipalActionPerformed

    private void jButton_AltaProveedor_NuevoProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProveedor_NuevoProveedorActionPerformed
        List<Integer> ids = new ArrayList<>();
        for(Proveedor p:proveedores){
            ids.add(p.getId());
        }
        if(dfm_AltaProveedor.getRowCount()>0){
            for(int i=0;i<dfm_AltaProveedor.getRowCount();i++){
                Integer id=Integer.valueOf(dfm_AltaProveedor.getValueAt(i,0).toString());
                ids.add(id);    
            }
        }    
        
        int nuevo_id=0;     
        Collections.sort(ids);
        if(!ids.isEmpty()){
            for(int i=1;i<=ids.size();i++){ 
                if(ids.get(i-1)!=i){
                    nuevo_id=i; break;
                }
                else if(i==ids.size())
                    nuevo_id=i+1;          
            } 
        }
        else{
            nuevo_id=1; 
        }
        
        dfm_AltaProveedor.addRow(new Object[]{nuevo_id,null,null,null,null,0,null,null,null,null});
    }//GEN-LAST:event_jButton_AltaProveedor_NuevoProveedorActionPerformed

    private void jButton_AltaProveedor_LimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProveedor_LimpiarTablaActionPerformed
        while(dfm_AltaProveedor.getRowCount()>0){
            dfm_AltaProveedor.removeRow(0);
        }
    }//GEN-LAST:event_jButton_AltaProveedor_LimpiarTablaActionPerformed

    private void jButton_AltaProveedor_RemoverProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProveedor_RemoverProveedorActionPerformed
        int f=jTable_AltaProveedor.getSelectedRow();
        if(f>=0)
        dfm_AltaProveedor.removeRow(f);
    }//GEN-LAST:event_jButton_AltaProveedor_RemoverProveedorActionPerformed

    private void jTextField_CambiosProveedor_NombreProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_CambiosProveedor_NombreProveedorKeyTyped
        while(dfm_CambiosProveedor.getRowCount() > 0){dfm_CambiosProveedor.removeRow(0);}
        String s = jTextField_CambiosProveedor_NombreProveedor.getText();
        for(Proveedor p: proveedores){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
            dfm_CambiosProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
        if(dfm_CambiosProveedor.getRowCount()==1){
            jTable_CambiosProveedor.setRowSelectionInterval(0,0);
        }
    }//GEN-LAST:event_jTextField_CambiosProveedor_NombreProveedorKeyTyped

    private void jTextField_BajaProveedor_NombreProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BajaProveedor_NombreProveedorKeyTyped
        while(dfm_BajaProveedor.getRowCount() > 0){dfm_BajaProveedor.removeRow(0);}
        String s = jTextField_BajaProveedor_NombreProveedor.getText();
        for(Proveedor p: proveedores){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
            dfm_BajaProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
        if(dfm_BajaProveedor.getRowCount()==1){
            jTable_BajaProveedor.setRowSelectionInterval(0,0);
        }
    }//GEN-LAST:event_jTextField_BajaProveedor_NombreProveedorKeyTyped

    private void jButton_ConsultaProveedor_LimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConsultaProveedor_LimpiarTablaActionPerformed
        while(dfm_ConsultasProveedor.getRowCount() > 0){dfm_ConsultasProveedor.removeRow(0);}
    }//GEN-LAST:event_jButton_ConsultaProveedor_LimpiarTablaActionPerformed

    private void jPanel_BajaProveedorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_BajaProveedorComponentShown
        for(Proveedor p: proveedores){
            dfm_BajaProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
    }//GEN-LAST:event_jPanel_BajaProveedorComponentShown

    private void jPanel_BajaProveedorComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_BajaProveedorComponentHidden
        while(dfm_BajaProveedor.getRowCount() > 0){dfm_BajaProveedor.removeRow(0);}
    }//GEN-LAST:event_jPanel_BajaProveedorComponentHidden

    private void jPanel_CambiosProveedorComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_CambiosProveedorComponentHidden
        while(dfm_CambiosProveedor.getRowCount() > 0){dfm_CambiosProveedor.removeRow(0);}
    }//GEN-LAST:event_jPanel_CambiosProveedorComponentHidden

    private void jPanel_CambiosProveedorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_CambiosProveedorComponentShown
        for(Proveedor p: proveedores){
            dfm_CambiosProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
    }//GEN-LAST:event_jPanel_CambiosProveedorComponentShown

    private void jButton_ConsultaProveedor_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConsultaProveedor_ConsultarActionPerformed
        while(dfm_ConsultasProveedor.getRowCount() > 0){dfm_ConsultasProveedor.removeRow(0);}
        if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==1){
            for(Proveedor p:proveedores){
                    if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                        if(p.getId()==Integer.parseInt(jTextField_ConsultaProveedor_ValorCriterio.getText()))
                            dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                    }
                    else
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});                       
                }
                if(jCheckBox_ConsultaProveedor_Descendente.isSelected()){
                    TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable_ConsultaProveedor.getModel());             
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(0, SortOrder.DESCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultaProveedor.setRowSorter(sorter);
            }
            else{
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable_ConsultaProveedor.getModel());
                List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
                sorter.setSortKeys(sortKeys);
                jTable_ConsultaProveedor.setRowSorter(sorter);
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==2){
            for(Proveedor p:proveedores){
                    if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                        if(p.getNombre().toUpperCase().contains(jTextField_ConsultaProveedor_ValorCriterio.getText().toUpperCase()))
                            dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                    }
                    else
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});                       
                }
                if(jCheckBox_ConsultaProveedor_Descendente.isSelected()){
                    TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable_ConsultaProveedor.getModel());             
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(1, SortOrder.DESCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultaProveedor.setRowSorter(sorter);
            }
            else{
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTable_ConsultaProveedor.getModel());
                List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING));
                sorter.setSortKeys(sortKeys);
                jTable_ConsultaProveedor.setRowSorter(sorter);
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==3){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getTelefono()==Long.parseLong(jTextField_ConsultaProveedor_ValorCriterio.getText()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==4){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getCalle().toUpperCase().contains(jTextField_ConsultaProveedor_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==5){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getNumero()==Integer.parseInt(jTextField_ConsultaProveedor_ValorCriterio.getText()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==6){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getInterior()==Integer.parseInt(jTextField_ConsultaProveedor_ValorCriterio.getText()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
                else
                    dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});                       
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==7){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getColonia().toUpperCase().contains(jTextField_ConsultaProveedor_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==8){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getCp()==Integer.parseInt(jTextField_ConsultaProveedor_ValorCriterio.getText()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==9){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getMunicipio().toUpperCase().contains(jTextField_ConsultaProveedor_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        }
        else if(jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex()==10){
            for(Proveedor p:proveedores){
                if(!jTextField_ConsultaProveedor_ValorCriterio.getText().equals("")){
                    if(p.getEstado().toUpperCase().contains(jTextField_ConsultaProveedor_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});         
                }
            }
        } 
    }//GEN-LAST:event_jButton_ConsultaProveedor_ConsultarActionPerformed

    private void jButton_BajaProveedor_DarDeBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BajaProveedor_DarDeBajaActionPerformed
        int rows[] = jTable_BajaProveedor.getSelectedRows(); 
        String s="";
        int prods_removidos=0;
        for(int r=rows.length-1;r>=0;r--){
            String nom=dfm_BajaProveedor.getValueAt(rows[r],1).toString();
            int opcion = JOptionPane.showConfirmDialog(null, "¿Remover el proveedor \""+nom+"\" ?", "Confirmar baja", JOptionPane.YES_NO_OPTION);
            if(opcion==0){                         
                dfm_BajaProveedor.removeRow(rows[r]);
                for(int i=0;i<proveedores.size();i++){
                    if(proveedores.get(i).getNombre().equals(nom)){
                        proveedores.remove(proveedores.get(i));
                    }
                } 
                prods_removidos++;
            }
        }
        if(prods_removidos==1){
            JOptionPane.showMessageDialog(null, "Proveedor removido", "Información",JOptionPane.INFORMATION_MESSAGE); 
        }
        else if(prods_removidos>1)
            JOptionPane.showMessageDialog(null, "Proveedores removidos", "Información",JOptionPane.INFORMATION_MESSAGE);        
        ActualizarProveedores();
    }//GEN-LAST:event_jButton_BajaProveedor_DarDeBajaActionPerformed

    private void jComboBox_ConsultaProveedor_CriterioBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ConsultaProveedor_CriterioBusquedaItemStateChanged
        while(dfm_ConsultasProveedor.getRowCount() > 0){dfm_ConsultasProveedor.removeRow(0);}
        int index=jComboBox_ConsultaProveedor_CriterioBusqueda.getSelectedIndex();
        if(index==0){
            jTextField_ConsultaProveedor_ValorCriterio.setEnabled(false);  
            jCheckBox_ConsultaProveedor_Descendente.setEnabled(false);
            jButton_ConsultaProveedor_Consultar.setEnabled(false);
            for(Proveedor p: proveedores){
                dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
            }
        }
        else if(index==3||index==4||index==5||index==6||index==7||index==8||index==9||index==10){           
            jTextField_ConsultaProveedor_ValorCriterio.setEnabled(true);
            jCheckBox_ConsultaProveedor_Descendente.setEnabled(false);
            jButton_ConsultaProveedor_Consultar.setEnabled(true);
        }
        else{
            jTextField_ConsultaProveedor_ValorCriterio.setEnabled(true);
            jCheckBox_ConsultaProveedor_Descendente.setEnabled(true);
            jButton_ConsultaProveedor_Consultar.setEnabled(true);
        }
        jTextField_ConsultaProveedor_ValorCriterio.setText("");
    }//GEN-LAST:event_jComboBox_ConsultaProveedor_CriterioBusquedaItemStateChanged

    private void jPanel_ConsultaProveedorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_ConsultaProveedorComponentShown
        for(Proveedor p: proveedores){
            dfm_ConsultasProveedor.addRow(new Object[]{p.getId(),p.getNombre(),p.getTelefono(),p.getCalle(),p.getNumero(),p.getInterior(),p.getColonia(),p.getCp(),p.getMunicipio(),p.getEstado()});
        }
    }//GEN-LAST:event_jPanel_ConsultaProveedorComponentShown

    private void jPanel_ConsultaProveedorComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_ConsultaProveedorComponentHidden
        while(dfm_ConsultasProveedor.getRowCount() > 0){dfm_ConsultasProveedor.removeRow(0);}
    }//GEN-LAST:event_jPanel_ConsultaProveedorComponentHidden

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sis_Proveedores_Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sis_Proveedores_Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sis_Proveedores_Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sis_Proveedores_Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sis_Proveedores_Proveedores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AbrirMenuPrincipal;
    private javax.swing.JButton jButton_AbrirModuloProductos;
    private javax.swing.JButton jButton_AltaProveedor_DarDeAlta;
    private javax.swing.JButton jButton_AltaProveedor_LimpiarTabla;
    private javax.swing.JButton jButton_AltaProveedor_NuevoProveedor;
    private javax.swing.JButton jButton_AltaProveedor_RemoverProveedor;
    private javax.swing.JButton jButton_BajaProveedor_DarDeBaja;
    private javax.swing.JButton jButton_CambiosProveedor_GuardarCambios;
    private javax.swing.JButton jButton_ConsultaProveedor_Consultar;
    private javax.swing.JButton jButton_ConsultaProveedor_LimpiarTabla;
    private javax.swing.JCheckBox jCheckBox_ConsultaProveedor_Descendente;
    private javax.swing.JComboBox<String> jComboBox_ConsultaProveedor_CriterioBusqueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_BajaProveedor;
    private javax.swing.JPanel jPanel_CambiosProveedor;
    private javax.swing.JPanel jPanel_ConsultaProveedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_AltaProveedor;
    private javax.swing.JTable jTable_BajaProveedor;
    private javax.swing.JTable jTable_CambiosProveedor;
    private javax.swing.JTable jTable_ConsultaProveedor;
    private javax.swing.JTextField jTextField_BajaProveedor_NombreProveedor;
    private javax.swing.JTextField jTextField_CambiosProveedor_NombreProveedor;
    private javax.swing.JTextField jTextField_ConsultaProveedor_ValorCriterio;
    // End of variables declaration//GEN-END:variables
}
