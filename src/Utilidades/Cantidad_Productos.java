/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Utilidades;

import Clases.Producto;
import static Menu.Menu_Principal.productos;
import Sistema_de_clientes.Sis_Clientes_Clientes;
import Sistema_de_encargado_de_mostrador.Sis_Encargado_Clientes;
import Sistema_de_encargado_de_mostrador.Sis_Encargado_Productos;
import Sistema_de_proveedores.Sis_Proveedores_Productos;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author José Manuel Carrillo Torres
 */
public class Cantidad_Productos extends javax.swing.JFrame {
    
    public static int Cantidad=0;
    
    /**
     * Creates new form JFrame_Cantidad
     */
    public Cantidad_Productos() {
        initComponents();
        this.setLocationRelativeTo(null);
        jTextField_Cantidad.setTransferHandler(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_Cantidad = new javax.swing.JTextField();
        jButton_Aceptar = new javax.swing.JButton();
        jButton_Cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atención");
        setName("jFrame_Cantidad"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);

        jLabel1.setText("Por favor ingrese la cantidad:");

        jTextField_Cantidad.setText("1");
        jTextField_Cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_CantidadKeyTyped(evt);
            }
        });

        jButton_Aceptar.setText("Aceptar");
        jButton_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AceptarActionPerformed(evt);
            }
        });

        jButton_Cancelar.setText("Cancelar");
        jButton_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField_Cantidad)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Aceptar)
                        .addGap(48, 48, 48)
                        .addComponent(jButton_Cancelar)
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Cancelar)
                    .addComponent(jButton_Aceptar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AceptarActionPerformed
        String cantidad_s=jTextField_Cantidad.getText();
        int longitud=cantidad_s.length();
        if(longitud>=5){
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad con menos de 5 digitos","Atención",JOptionPane.WARNING_MESSAGE); 
        }
        else if(!cantidad_s.equals("")){
            int cantidad_i=Integer.valueOf(jTextField_Cantidad.getText());
            if(cantidad_i!=0){     
                if(Sis_Encargado_Productos.row_inventario>-1){
                    Sis_Encargado_Productos.jTextField_SalidaProducto_NombreProducto.setText(""); // Esta linea no se si está bien aqui. Hay que probarlo
                    for(Producto p :productos){
                        String nombre=Sis_Encargado_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Productos.row_inventario,0).toString();  
                        if(p.getNombre().equals(nombre)){
                            if(p.getExistencia()<cantidad_i){
                                JOptionPane.showMessageDialog(null, "El producto \""+nombre+"\" no tiene suficientes existencias","Atención",JOptionPane.WARNING_MESSAGE); 
                            }
                            else{
                                String contenido=Sis_Encargado_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Productos.row_inventario,1).toString();
                                double precio=Double.valueOf(Sis_Encargado_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Productos.row_inventario,2).toString());
                                double total=Double.valueOf(Sis_Encargado_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Productos.row_inventario,2).toString())*cantidad_i;   // Obtiene el precio por la cantidad

                                Sis_Encargado_Productos.dfm_SalidaProducto_Venta.addRow(new Object[]{nombre,contenido,precio,cantidad_i,total});                     

                                double total_venta=0;
                                for(int i=0;i<Sis_Encargado_Productos.dfm_SalidaProducto_Venta.getRowCount();i++){  // for para obtener la cantidad total a 
                                    total_venta+=Double.parseDouble(Sis_Encargado_Productos.dfm_SalidaProducto_Venta.getValueAt(i,4).toString());
                                }
                                Sis_Encargado_Productos.jTextField_SalidaProducto_Total.setText("$ "+String.valueOf(total_venta));
                            } 
                        }     
                    }  
                    Sis_Encargado_Productos.row_inventario=-1;
                    Sis_Encargado_Productos.jTable_SalidaProducto_Inventario.setVisible(true);
                    Sis_Encargado_Productos.jButton_SalidaProducto_Vender.setEnabled(true);
                }  
                else if(Sis_Clientes_Clientes.row_inventario>-1){
                    Sis_Clientes_Clientes.jTextField_SalidaProducto_NombreProducto.setText("");
                    for(Producto p :productos){
                        String nombre=Sis_Clientes_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Clientes_Clientes.row_inventario,0).toString();  
                        if(p.getNombre().equals(nombre)){
                            if(p.getExistencia()<cantidad_i){
                                    JOptionPane.showMessageDialog(null, "El producto \""+nombre+"\" no tiene suficientes existencias","Atención",JOptionPane.WARNING_MESSAGE); 
                            }
                            else{
                                String contenido=Sis_Clientes_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Clientes_Clientes.row_inventario,1).toString();
                                double precio=Double.valueOf(Sis_Clientes_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Clientes_Clientes.row_inventario,2).toString());
                                double total=Double.valueOf(Sis_Clientes_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Clientes_Clientes.row_inventario,2).toString())*cantidad_i;   // Obtiene el precio por la cantidad

                                Sis_Clientes_Clientes.dfm_SalidaProducto_Venta.addRow(new Object[]{nombre,contenido,precio,cantidad_i,total});                     

                                double total_venta=0;
                                for(int i=0;i<Sis_Clientes_Clientes.dfm_SalidaProducto_Venta.getRowCount();i++){  // for para obtener la cantidad total a 
                                    total_venta+=Double.parseDouble(Sis_Clientes_Clientes.dfm_SalidaProducto_Venta.getValueAt(i,4).toString());
                                }
                                Sis_Clientes_Clientes.jTextField_SalidaProducto_Total.setText("$ "+String.valueOf(total_venta));     
                            } 
                        }     
                    }  
                    Sis_Clientes_Clientes.row_inventario=-1;
                    Sis_Clientes_Clientes.jTable_RegistroClientes_Inventario.setVisible(true);
                    Sis_Clientes_Clientes.jButton_RegistroClientes_Vender.setEnabled(true);
                }  
                else if(Sis_Encargado_Clientes.row_inventario>-1){
                    Sis_Encargado_Clientes.jTextField_SalidaProducto_NombreProducto.setText("");
                    for(Producto p :productos){
                        String nombre=Sis_Encargado_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Clientes.row_inventario,0).toString();  
                        if(p.getNombre().equals(nombre)){
                            if(p.getExistencia()<cantidad_i){
                                    JOptionPane.showMessageDialog(null, "El producto \""+nombre+"\" no tiene suficientes existencias","Atención",JOptionPane.WARNING_MESSAGE); 
                            }
                            else{
                                String contenido=Sis_Encargado_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Clientes.row_inventario,1).toString();
                                double precio=Double.valueOf(Sis_Encargado_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Clientes.row_inventario,2).toString());
                                double total=Double.valueOf(Sis_Encargado_Clientes.dfm_SalidaProducto_Inventario.getValueAt(Sis_Encargado_Clientes.row_inventario,2).toString())*cantidad_i;   // Obtiene el precio por la cantidad

                                Sis_Encargado_Clientes.dfm_SalidaProducto_Venta.addRow(new Object[]{nombre,contenido,precio,cantidad_i,total});                     

                                double total_venta=0;
                                for(int i=0;i<Sis_Encargado_Clientes.dfm_SalidaProducto_Venta.getRowCount();i++){  // for para obtener la cantidad total a 
                                    total_venta+=Double.parseDouble(Sis_Encargado_Clientes.dfm_SalidaProducto_Venta.getValueAt(i,4).toString());
                                }
                                Sis_Encargado_Clientes.jTextField_RegistroCliente_Total.setText("$ "+String.valueOf(total_venta));  
                            } 
                        }     
                    }  
                    Sis_Encargado_Clientes.row_inventario=-1;
                    Sis_Encargado_Clientes.jTable_RegistroClientes_Inventario.setVisible(true);
                    Sis_Encargado_Clientes.jButton_RegistroCliente_Vender.setEnabled(true);
                }  
                else if(Sis_Proveedores_Productos.row_inventario>-1){
                    Sis_Proveedores_Productos.jTextField_SalidaProducto_NombreProducto.setText("");
                    for(Producto p :productos){
                        String nombre=Sis_Proveedores_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Proveedores_Productos.row_inventario,0).toString();  
                        if(p.getNombre().equals(nombre)){
                            if(p.getExistencia()<cantidad_i){
                                    JOptionPane.showMessageDialog(null, "El producto \""+nombre+"\" no tiene suficientes existencias","Atención",JOptionPane.WARNING_MESSAGE); 
                            }
                            else{
                                String contenido=Sis_Proveedores_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Proveedores_Productos.row_inventario,1).toString();
                                double precio=Double.valueOf(Sis_Proveedores_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Proveedores_Productos.row_inventario,2).toString());
                                double total=Double.valueOf(Sis_Proveedores_Productos.dfm_SalidaProducto_Inventario.getValueAt(Sis_Proveedores_Productos.row_inventario,2).toString())*cantidad_i;   // Obtiene el precio por la cantidad

                                Sis_Proveedores_Productos.dfm_SalidaProducto_Venta.addRow(new Object[]{nombre,contenido,precio,cantidad_i,total});                     

                                double total_venta=0;
                                for(int i=0;i<Sis_Proveedores_Productos.dfm_SalidaProducto_Venta.getRowCount();i++){  // for para obtener la cantidad total a 
                                    total_venta+=Double.parseDouble(Sis_Proveedores_Productos.dfm_SalidaProducto_Venta.getValueAt(i,4).toString());
                                }
                                Sis_Proveedores_Productos.jTextField_SalidaProducto_Total.setText("$ "+String.valueOf(total_venta));  
                            } 
                        }     
                    }
                    Sis_Proveedores_Productos.row_inventario=-1;
                    Sis_Proveedores_Productos.jTable_SalidaProducto_Inventario.setVisible(true);
                    Sis_Proveedores_Productos.jButton_SalidaProducto_Vender.setEnabled(true);
                }  
            }
        } 
        this.dispose();
    }//GEN-LAST:event_jButton_AceptarActionPerformed

    private void jButton_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelarActionPerformed
        if(Sis_Encargado_Productos.row_inventario>-1){
            Sis_Encargado_Productos.jTextField_SalidaProducto_NombreProducto.setText("");
            Sis_Encargado_Productos.row_inventario=-1;
            Sis_Encargado_Productos.jTable_SalidaProducto_Inventario.setVisible(true);
            Sis_Encargado_Productos.jButton_SalidaProducto_Vender.setEnabled(true);
        }
        else if(Sis_Encargado_Clientes.row_inventario>-1){
            Sis_Encargado_Clientes.jTextField_SalidaProducto_NombreProducto.setText("");
            Sis_Encargado_Clientes.row_inventario=-1;
            Sis_Encargado_Clientes.jTable_RegistroClientes_Inventario.setVisible(true);
            Sis_Encargado_Clientes.jButton_RegistroCliente_Vender.setEnabled(true);
        }
        else if(Sis_Clientes_Clientes.row_inventario>-1){
            Sis_Clientes_Clientes.jTextField_SalidaProducto_NombreProducto.setText("");
            Sis_Clientes_Clientes.row_inventario=-1;
            Sis_Clientes_Clientes.jTable_RegistroClientes_Inventario.setVisible(true);
            Sis_Clientes_Clientes.jButton_RegistroClientes_Vender.setEnabled(true);
        }
        else if(Sis_Proveedores_Productos.row_inventario>-1){
            Sis_Proveedores_Productos.jTextField_SalidaProducto_NombreProducto.setText("");
            Sis_Proveedores_Productos.row_inventario=-1;
            Sis_Proveedores_Productos.jTable_SalidaProducto_Inventario.setVisible(true);
            Sis_Proveedores_Productos.jButton_SalidaProducto_Vender.setEnabled(true);
        }
        this.dispose();
    }//GEN-LAST:event_jButton_CancelarActionPerformed

    private void jTextField_CantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_CantidadKeyTyped
        char vchar=evt.getKeyChar();
        if(!(Character.isDigit(vchar))||(vchar==KeyEvent.VK_BACK_SPACE)||(vchar==KeyEvent.VK_DELETE))
            evt.consume();
    }//GEN-LAST:event_jTextField_CantidadKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cantidad_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cantidad_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cantidad_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cantidad_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cantidad_Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Aceptar;
    private javax.swing.JButton jButton_Cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField_Cantidad;
    // End of variables declaration//GEN-END:variables
}
