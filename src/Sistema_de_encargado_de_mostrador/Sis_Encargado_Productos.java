/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sistema_de_encargado_de_mostrador;

import Clases.Cliente;
import Clases.Producto;
import Clases.Proveedor;
import Utilidades.Cantidad_Productos;
import static Menu.Menu_Principal.productos;
import static Menu.Menu_Principal.clientes;
import static Menu.Menu_Principal.proveedores;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import java.util.Collections;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.TableColumn;

/**
 *
 * @author José Manuel Carrillo Torres
 */
public final class Sis_Encargado_Productos extends javax.swing.JFrame {

    DefaultTableModel dfm_AltaProducto;
    DefaultTableModel dfm_BajaProducto;
    DefaultTableModel dfm_EntradaProducto;
    DefaultTableModel dfm_CambiosProducto;
    public static DefaultTableModel dfm_SalidaProducto_Inventario; 
    public static DefaultTableModel dfm_SalidaProducto_Venta; 
    DefaultTableModel dfm_ConsultasProducto;
    int nuevo_cliente=1;
    int numero;
    
    public static int row_inventario=-1;
    
    List<Integer> rows_de_prods_seleccionados;
    List<Producto> prods_originales;
    
    public Sis_Encargado_Productos() {        
        initComponents();
        this.setLocationRelativeTo(null);
        this.dfm_AltaProducto = (DefaultTableModel) jTable_AltaProducto.getModel();
        this.dfm_BajaProducto = (DefaultTableModel) jTable_BajaProducto.getModel();
        this.dfm_EntradaProducto = (DefaultTableModel) jTable_EntradaProducto.getModel();
        this.dfm_CambiosProducto = (DefaultTableModel) jTable_CambiosProducto.getModel();
        this.dfm_ConsultasProducto = (DefaultTableModel) jTable_ConsultasProducto.getModel();
        Sis_Encargado_Productos.dfm_SalidaProducto_Inventario = (DefaultTableModel) jTable_SalidaProducto_Inventario.getModel();
        Sis_Encargado_Productos.dfm_SalidaProducto_Venta = (DefaultTableModel) jTable_SalidaProducto_Venta.getModel();
        jTextField_EntradaProducto_EntradasProducto.setTransferHandler(null);
        rows_de_prods_seleccionados = new ArrayList<>();
        prods_originales = new ArrayList<>();
        Nuevo_Cliente(); 
        jLabel14.setText("Cliente del día: "+nuevo_cliente);
        VistaParaGerente(Menu.Iniciando_Sistema.gerente);   
        ListSelectionModel model=jTable_CambiosProducto.getSelectionModel();
        model.addListSelectionListener((ListSelectionEvent e) -> {
            int row=jTable_CambiosProducto.getSelectedRow();
            if(jTable_CambiosProducto.getSelectedRow()>=0&&!rows_de_prods_seleccionados.contains(row)) {
                int a=Integer.parseInt(dfm_CambiosProducto.getValueAt(row,0).toString());
                int ee=Integer.parseInt(dfm_CambiosProducto.getValueAt(row,4).toString());
                Double f=Double.parseDouble(dfm_CambiosProducto.getValueAt(row,5).toString());
                String b=dfm_CambiosProducto.getValueAt(row,1).toString();
                String c=dfm_CambiosProducto.getValueAt(row,2).toString();
                String d=dfm_CambiosProducto.getValueAt(row,3).toString();
                rows_de_prods_seleccionados.add(row);
                prods_originales.add(new Producto(a,b,c,d,ee,f));
            }
        });
    }

    
    /**
     * Creates new form FormProductos
     */
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jTabbedPane_EncargadoProductos = new javax.swing.JTabbedPane();
        jPanel_AltaProducto = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_AltaProducto = new javax.swing.JTable();
        jButton_AltaProducto_DarDeAlta = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton_AltaProducto_LimpiarTabla = new javax.swing.JButton();
        jButton_AltaProducto_NuevoProducto = new javax.swing.JButton();
        jButton_AltaProducto_RemoverProducto = new javax.swing.JButton();
        jPanel_BajaProducto = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_BajaProducto = new javax.swing.JTable();
        jButton_BajaProducto_DarDeBaja = new javax.swing.JButton();
        jTextField_BajaProducto_NombreProducto = new javax.swing.JTextField();
        jPanel_EntradaProducto = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_EntradaProducto = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jTextField_EntradaProducto_EntradasProducto = new javax.swing.JTextField();
        jButton_EntradaProducto_AgregarEntrada = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField_EntradaProducto_NombreProducto = new javax.swing.JTextField();
        jPanel_SalidaProducto = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField_SalidaProducto_Total = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton_SalidaProducto_Vender = new javax.swing.JButton();
        jButton_SalidaProducto_LimpiarLista = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_SalidaProducto_Inventario = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable_SalidaProducto_Venta = new javax.swing.JTable();
        jTextField_SalidaProducto_NombreProducto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel_CambiosProducto = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_CambiosProducto = new javax.swing.JTable();
        jButton_CambiosProducto_GuardarCambios = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField_CambiosProducto_NombreProducto = new javax.swing.JTextField();
        jPanel_ConsultasProducto = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ConsultasProducto = new javax.swing.JTable();
        jComboBox_ConsultasProducto_SeleccionarCriterio = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField_ConsultasProducto_ValorCriterio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton_ConsultasProducto_Consultar = new javax.swing.JButton();
        jCheckBox_ConsultasProducto_Descendente = new javax.swing.JCheckBox();
        jButton_ConsultasProdcto_LimpiarTabla = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton_AbrirModuloProveedores = new javax.swing.JButton();
        jButton_AbrirMenuPrincipal = new javax.swing.JButton();
        jButton_AbrirModuloClientes = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Módulo de productos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("frame_EncargadoProductos"); // NOI18N

        jTabbedPane_EncargadoProductos.setName(""); // NOI18N
        jTabbedPane_EncargadoProductos.setPreferredSize(new java.awt.Dimension(800, 600));

        jTable_AltaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de producto", "Nombre", "Contenido", "Linea", "Existencia", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_AltaProducto.setEnabled(false);
        jTable_AltaProducto.setNextFocusableComponent(jButton_AltaProducto_DarDeAlta);
        jTable_AltaProducto.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable_AltaProducto);

        jButton_AltaProducto_DarDeAlta.setText("Dar de Alta");
        jButton_AltaProducto_DarDeAlta.setEnabled(false);
        jButton_AltaProducto_DarDeAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProducto_DarDeAltaActionPerformed(evt);
            }
        });

        jLabel4.setText("Ingrese los datos de el producto o los productos a dar de alta en la siguiente tabla:");

        jButton_AltaProducto_LimpiarTabla.setText("Limpiar tabla");
        jButton_AltaProducto_LimpiarTabla.setEnabled(false);
        jButton_AltaProducto_LimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProducto_LimpiarTablaActionPerformed(evt);
            }
        });

        jButton_AltaProducto_NuevoProducto.setText("Nuevo producto");
        jButton_AltaProducto_NuevoProducto.setEnabled(false);
        jButton_AltaProducto_NuevoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProducto_NuevoProductoActionPerformed(evt);
            }
        });

        jButton_AltaProducto_RemoverProducto.setText("Remover producto");
        jButton_AltaProducto_RemoverProducto.setEnabled(false);
        jButton_AltaProducto_RemoverProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AltaProducto_RemoverProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_AltaProductoLayout = new javax.swing.GroupLayout(jPanel_AltaProducto);
        jPanel_AltaProducto.setLayout(jPanel_AltaProductoLayout);
        jPanel_AltaProductoLayout.setHorizontalGroup(
            jPanel_AltaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AltaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_AltaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_AltaProductoLayout.createSequentialGroup()
                        .addComponent(jButton_AltaProducto_LimpiarTabla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_AltaProducto_RemoverProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AltaProducto_DarDeAlta))
                    .addGroup(jPanel_AltaProductoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AltaProducto_NuevoProducto)))
                .addContainerGap())
        );
        jPanel_AltaProductoLayout.setVerticalGroup(
            jPanel_AltaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AltaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_AltaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton_AltaProducto_NuevoProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_AltaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_AltaProducto_DarDeAlta)
                    .addComponent(jButton_AltaProducto_LimpiarTabla)
                    .addComponent(jButton_AltaProducto_RemoverProducto))
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Alta producto", jPanel_AltaProducto);

        jPanel_BajaProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_BajaProductoComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_BajaProductoComponentShown(evt);
            }
        });

        jLabel5.setText("Escriba el nombre del producto y haga clic en la fila para poder dar de baja:");

        jTable_BajaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de producto", "Nombre", "Contenido", "Linea", "Existencia", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_BajaProducto.setEnabled(false);
        jTable_BajaProducto.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable_BajaProducto);

        jButton_BajaProducto_DarDeBaja.setText("Dar de baja");
        jButton_BajaProducto_DarDeBaja.setEnabled(false);
        jButton_BajaProducto_DarDeBaja.setName(""); // NOI18N
        jButton_BajaProducto_DarDeBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BajaProducto_DarDeBajaActionPerformed(evt);
            }
        });

        jTextField_BajaProducto_NombreProducto.setEnabled(false);
        jTextField_BajaProducto_NombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_BajaProducto_NombreProductoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel_BajaProductoLayout = new javax.swing.GroupLayout(jPanel_BajaProducto);
        jPanel_BajaProducto.setLayout(jPanel_BajaProductoLayout);
        jPanel_BajaProductoLayout.setHorizontalGroup(
            jPanel_BajaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BajaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BajaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(jPanel_BajaProductoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_BajaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_BajaProductoLayout.createSequentialGroup()
                                .addGap(0, 295, Short.MAX_VALUE)
                                .addComponent(jButton_BajaProducto_DarDeBaja))
                            .addComponent(jTextField_BajaProducto_NombreProducto))))
                .addContainerGap())
        );
        jPanel_BajaProductoLayout.setVerticalGroup(
            jPanel_BajaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_BajaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_BajaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_BajaProducto_NombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_BajaProducto_DarDeBaja)
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Baja producto", jPanel_BajaProducto);

        jPanel_EntradaProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_EntradaProductoComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_EntradaProductoComponentShown(evt);
            }
        });

        jTable_EntradaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de producto", "Nombre", "Contenido", "Linea", "Existencia", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_EntradaProducto.setEnabled(false);
        jTable_EntradaProducto.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable_EntradaProducto);

        jLabel6.setText("Escriba la cantidad de unidades que entrarán a las existencias: ");

        jTextField_EntradaProducto_EntradasProducto.setEnabled(false);
        jTextField_EntradaProducto_EntradasProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_EntradaProducto_EntradasProductoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_EntradaProducto_EntradasProductoKeyTyped(evt);
            }
        });

        jButton_EntradaProducto_AgregarEntrada.setText("Agregar entrada");
        jButton_EntradaProducto_AgregarEntrada.setEnabled(false);
        jButton_EntradaProducto_AgregarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EntradaProducto_AgregarEntradaActionPerformed(evt);
            }
        });

        jLabel9.setText("Escriba el nombre del producto y haga clic en la fila del producto:");

        jTextField_EntradaProducto_NombreProducto.setEnabled(false);
        jTextField_EntradaProducto_NombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_EntradaProducto_NombreProductoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel_EntradaProductoLayout = new javax.swing.GroupLayout(jPanel_EntradaProducto);
        jPanel_EntradaProducto.setLayout(jPanel_EntradaProductoLayout);
        jPanel_EntradaProductoLayout.setHorizontalGroup(
            jPanel_EntradaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_EntradaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_EntradaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(jPanel_EntradaProductoLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_EntradaProducto_EntradasProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_EntradaProducto_AgregarEntrada))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_EntradaProductoLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_EntradaProducto_NombreProducto)))
                .addContainerGap())
        );
        jPanel_EntradaProductoLayout.setVerticalGroup(
            jPanel_EntradaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_EntradaProductoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel_EntradaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_EntradaProducto_NombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_EntradaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_EntradaProducto_EntradasProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_EntradaProducto_AgregarEntrada))
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Entrada producto", jPanel_EntradaProducto);

        jPanel_SalidaProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_SalidaProductoComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_SalidaProductoComponentShown(evt);
            }
        });

        jLabel14.setText("Cliente del día: - -");

        jLabel15.setText("Escriba el nombre del producto y haga clic en la fila del producto para agregarlo a la lista:");

        jLabel16.setText("Lista de productos a vender");

        jTextField_SalidaProducto_Total.setEditable(false);
        jTextField_SalidaProducto_Total.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.light"));
        jTextField_SalidaProducto_Total.setText("$ 00.00");

        jLabel17.setText("Total de la venta:");

        jButton_SalidaProducto_Vender.setText("Vender");
        jButton_SalidaProducto_Vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SalidaProducto_VenderActionPerformed(evt);
            }
        });

        jButton_SalidaProducto_LimpiarLista.setText("Limpiar lista");
        jButton_SalidaProducto_LimpiarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SalidaProducto_LimpiarListaActionPerformed(evt);
            }
        });

        jTable_SalidaProducto_Inventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Contenido", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_SalidaProducto_Inventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SalidaProducto_InventarioMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable_SalidaProducto_Inventario);

        jTable_SalidaProducto_Venta.setBorder(new javax.swing.border.MatteBorder(null));
        jTable_SalidaProducto_Venta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Contenido", "Precio", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_SalidaProducto_Venta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SalidaProducto_VentaMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(jTable_SalidaProducto_Venta);

        jTextField_SalidaProducto_NombreProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_SalidaProducto_NombreProductoMouseClicked(evt);
            }
        });
        jTextField_SalidaProducto_NombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_SalidaProducto_NombreProductoKeyTyped(evt);
            }
        });

        jLabel8.setText("Clic en un producto para removerlo");

        javax.swing.GroupLayout jPanel_SalidaProductoLayout = new javax.swing.GroupLayout(jPanel_SalidaProducto);
        jPanel_SalidaProducto.setLayout(jPanel_SalidaProductoLayout);
        jPanel_SalidaProductoLayout.setHorizontalGroup(
            jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SalidaProductoLayout.createSequentialGroup()
                .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_SalidaProductoLayout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_SalidaProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_SalidaProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_SalidaProductoLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(jPanel_SalidaProductoLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_SalidaProducto_NombreProducto))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_SalidaProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6))
                    .addGroup(jPanel_SalidaProductoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton_SalidaProducto_LimpiarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(120, 120, 120)
                        .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_SalidaProducto_Vender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_SalidaProductoLayout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_SalidaProducto_Total, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel_SalidaProductoLayout.setVerticalGroup(
            jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_SalidaProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField_SalidaProducto_NombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_SalidaProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_SalidaProducto_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel14)
                    .addComponent(jButton_SalidaProducto_LimpiarLista))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_SalidaProducto_Vender)
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Salida producto", jPanel_SalidaProducto);

        jPanel_CambiosProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_CambiosProductoComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_CambiosProductoComponentShown(evt);
            }
        });

        jTable_CambiosProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de producto", "Nombre", "Contenido", "Linea", "Existencia", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_CambiosProducto.setEnabled(false);
        jTable_CambiosProducto.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jTable_CambiosProducto);

        jButton_CambiosProducto_GuardarCambios.setText("Guardar cambios");
        jButton_CambiosProducto_GuardarCambios.setEnabled(false);
        jButton_CambiosProducto_GuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CambiosProducto_GuardarCambiosActionPerformed(evt);
            }
        });

        jLabel10.setText("Escriba el nombre del producto y haga los cambios deseados:");

        jTextField_CambiosProducto_NombreProducto.setEnabled(false);
        jTextField_CambiosProducto_NombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_CambiosProducto_NombreProductoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel_CambiosProductoLayout = new javax.swing.GroupLayout(jPanel_CambiosProducto);
        jPanel_CambiosProducto.setLayout(jPanel_CambiosProductoLayout);
        jPanel_CambiosProductoLayout.setHorizontalGroup(
            jPanel_CambiosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CambiosProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_CambiosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CambiosProductoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_CambiosProducto_GuardarCambios))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_CambiosProductoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_CambiosProducto_NombreProducto)))
                .addContainerGap())
        );
        jPanel_CambiosProductoLayout.setVerticalGroup(
            jPanel_CambiosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CambiosProductoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel_CambiosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_CambiosProducto_NombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_CambiosProducto_GuardarCambios)
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Cambios producto", jPanel_CambiosProducto);

        jPanel_ConsultasProducto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jPanel_ConsultasProductoComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel_ConsultasProductoComponentShown(evt);
            }
        });

        jTable_ConsultasProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de producto", "Nombre", "Contenido", "Linea", "Existencia", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_ConsultasProducto);

        jComboBox_ConsultasProducto_SeleccionarCriterio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo el inventario", "Por número", "Por nombre", "Por contenido", "Por linea", "Por existencias" }));
        jComboBox_ConsultasProducto_SeleccionarCriterio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ConsultasProducto_SeleccionarCriterioItemStateChanged(evt);
            }
        });

        jLabel2.setText("Seleccione el criterio de consulta:");

        jTextField_ConsultasProducto_ValorCriterio.setEnabled(false);

        jLabel3.setText("Ingrese el valor del criterio:");

        jButton_ConsultasProducto_Consultar.setText("Consultar");
        jButton_ConsultasProducto_Consultar.setEnabled(false);
        jButton_ConsultasProducto_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConsultasProducto_ConsultarActionPerformed(evt);
            }
        });

        jCheckBox_ConsultasProducto_Descendente.setText("Descendente");
        jCheckBox_ConsultasProducto_Descendente.setEnabled(false);

        jButton_ConsultasProdcto_LimpiarTabla.setText("Limpiar tabla");
        jButton_ConsultasProdcto_LimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConsultasProdcto_LimpiarTablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ConsultasProductoLayout = new javax.swing.GroupLayout(jPanel_ConsultasProducto);
        jPanel_ConsultasProducto.setLayout(jPanel_ConsultasProductoLayout);
        jPanel_ConsultasProductoLayout.setHorizontalGroup(
            jPanel_ConsultasProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ConsultasProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ConsultasProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel_ConsultasProductoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_ConsultasProducto_SeleccionarCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_ConsultasProducto_ValorCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_ConsultasProducto_Descendente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_ConsultasProducto_Consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ConsultasProductoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_ConsultasProdcto_LimpiarTabla)))
                .addContainerGap())
        );
        jPanel_ConsultasProductoLayout.setVerticalGroup(
            jPanel_ConsultasProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ConsultasProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_ConsultasProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_ConsultasProducto_SeleccionarCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_ConsultasProducto_ValorCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ConsultasProducto_Consultar)
                    .addComponent(jCheckBox_ConsultasProducto_Descendente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_ConsultasProdcto_LimpiarTabla)
                .addContainerGap())
        );

        jTabbedPane_EncargadoProductos.addTab("Consultas producto", jPanel_ConsultasProducto);

        jLabel1.setText("Elija una de las siguientes pestañas para realizar una operación con respecto a los productos:");

        jButton_AbrirModuloProveedores.setText("Abrir Módulo de proveedores");
        jButton_AbrirModuloProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbrirModuloProveedoresActionPerformed(evt);
            }
        });

        jButton_AbrirMenuPrincipal.setText("Abrir menú principal");
        jButton_AbrirMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbrirMenuPrincipalActionPerformed(evt);
            }
        });

        jButton_AbrirModuloClientes.setText("Abrir módulo de clientes");
        jButton_AbrirModuloClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbrirModuloClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_AbrirMenuPrincipal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_AbrirModuloClientes)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_AbrirModuloProveedores))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane_EncargadoProductos, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane_EncargadoProductos, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_AbrirModuloClientes)
                    .addComponent(jButton_AbrirModuloProveedores)
                    .addComponent(jButton_AbrirMenuPrincipal))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void VistaParaGerente(boolean gerente){
        if(gerente){
           jTable_AltaProducto.setEnabled(true);
           jButton_AltaProducto_DarDeAlta.setEnabled(true);
           jButton_AltaProducto_NuevoProducto.setEnabled(true);
           jButton_AltaProducto_LimpiarTabla.setEnabled(true);
           jButton_AltaProducto_RemoverProducto.setEnabled(true);  
           jTable_BajaProducto.setEnabled(true);
           jButton_BajaProducto_DarDeBaja.setEnabled(true);
           jTextField_BajaProducto_NombreProducto.setEnabled(true);
           jTable_BajaProducto.setEnabled(true);
           jTextField_EntradaProducto_NombreProducto.setEnabled(true);
           jTable_EntradaProducto.setEnabled(true);
           jTextField_EntradaProducto_EntradasProducto.setEnabled(true);
           jButton_EntradaProducto_AgregarEntrada.setEnabled(true);
           jTextField_CambiosProducto_NombreProducto.setEnabled(true);
           jTable_CambiosProducto.setEnabled(true);
           jButton_CambiosProducto_GuardarCambios.setEnabled(true);
        }    
    }
    
    void Nuevo_Cliente(){
        Calendar calendario = Calendar.getInstance();
        String dia=String.valueOf(calendario.get(Calendar.DAY_OF_MONTH));
        String mes=String.valueOf(calendario.get(Calendar.MONTH)+1);
        String año=String.valueOf(calendario.get(Calendar.YEAR));       
        if(Integer.valueOf(dia)<10)
            dia="0"+dia;
        if(Integer.valueOf(mes)<10)
            mes="0"+mes;         
        String hoy=dia+"/"+mes+"/"+año;
        for(int i=0;i<clientes.size();i++){        
            if(clientes.get(i).getFecha().equals(hoy)){
                if(nuevo_cliente==clientes.get(i).getNumeroCliente())
                    nuevo_cliente++;
            } 
        }        
    }
    
    void ActualizarProductos(){
        try{
            FileWriter fw = new FileWriter("Productos.txt");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            int c=0;
            for(int j=0;j<productos.size();j++){
                if(c==0)
                    pw.write(productos.get(j).getNumero()+"|"+productos.get(j).getNombre()+"|"+productos.get(j).getContenido()+"|"+productos.get(j).getLinea()+"|"+productos.get(j).getExistencia()+"|"+productos.get(j).getPrecio());
                else
                    pw.append("\r\n"+productos.get(j).getNumero()+"|"+productos.get(j).getNombre()+"|"+productos.get(j).getContenido()+"|"+productos.get(j).getLinea()+"|"+productos.get(j).getExistencia()+"|"+productos.get(j).getPrecio());
                c++;
            }
            pw.close();
            bw.close();
            fw.close();
        }
        catch (IOException ex){}
    }
    
    void ActualizarClientes(){
        try{ 
            FileWriter fw = new FileWriter("Clientes.txt");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            int c=0;
            for(int j=0;j<clientes.size();j++){
                if(c==0)
                    pw.write(clientes.get(j).getNumeroCliente()+"|"+clientes.get(j).getNumeroProducto()+"|"+clientes.get(j).getCantidad()+"|"+clientes.get(j).getImporte()+"|"+clientes.get(j).getFecha());
                else
                    pw.append("\r\n"+clientes.get(j).getNumeroCliente()+"|"+clientes.get(j).getNumeroProducto()+"|"+clientes.get(j).getCantidad()+"|"+clientes.get(j).getImporte()+"|"+clientes.get(j).getFecha());
                c++;
            }
            pw.close();
            bw.close();
            fw.close();
        }
        catch (IOException ex){}
    }
    
    private void jButton_AbrirModuloProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbrirModuloProveedoresActionPerformed
        while(dfm_AltaProducto.getRowCount() > 0){dfm_AltaProducto.removeRow(0);}
        while(dfm_BajaProducto.getRowCount() > 0){dfm_BajaProducto.removeRow(0);}
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
        while(dfm_SalidaProducto_Venta.getRowCount() > 0){dfm_SalidaProducto_Venta.removeRow(0);}
        while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
        while(dfm_EntradaProducto.getRowCount() > 0){dfm_EntradaProducto.removeRow(0);}
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}
        row_inventario=-1;
        Sis_Encargado_Provedores fp = new Sis_Encargado_Provedores();
        this.dispose();
        fp.setVisible(true);
    }//GEN-LAST:event_jButton_AbrirModuloProveedoresActionPerformed

    private void jButton_AbrirModuloClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbrirModuloClientesActionPerformed
        while(dfm_AltaProducto.getRowCount() > 0){dfm_AltaProducto.removeRow(0);}
        while(dfm_BajaProducto.getRowCount() > 0){dfm_BajaProducto.removeRow(0);}
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
        while(dfm_SalidaProducto_Venta.getRowCount() > 0){dfm_SalidaProducto_Venta.removeRow(0);}
        while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
        while(dfm_EntradaProducto.getRowCount() > 0){dfm_EntradaProducto.removeRow(0);}
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}
        row_inventario=-1;
        Sis_Encargado_Clientes fc = new Sis_Encargado_Clientes();
        this.dispose();
        fc.setVisible(true);
    }//GEN-LAST:event_jButton_AbrirModuloClientesActionPerformed

    private void jButton_AltaProducto_DarDeAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProducto_DarDeAltaActionPerformed
        if(jTable_AltaProducto.isEditing())
            jTable_AltaProducto.getCellEditor().stopCellEditing();
        int prods_nuevos=0;
        Boolean datos_incorrectos=false;
        for(int i=dfm_AltaProducto.getRowCount()-1;i>=0;i--){                                    
            try{
                int a=Integer.parseInt(dfm_AltaProducto.getValueAt(i,0).toString());
                int e=Integer.parseInt(dfm_AltaProducto.getValueAt(i,4).toString());
                Double f=Double.parseDouble(dfm_AltaProducto.getValueAt(i,5).toString());
                String b=dfm_AltaProducto.getValueAt(i,1).toString();
                String c=dfm_AltaProducto.getValueAt(i,2).toString();
                String d=dfm_AltaProducto.getValueAt(i,3).toString();
                if(b.contains("|")||c.contains("|")||d.contains("|"))
                    JOptionPane.showMessageDialog(null, "Por favor evite el uso del caracter \"|\"", "Atención",JOptionPane.WARNING_MESSAGE);
                else{
                    if(a<0||e<0||f<0){
                       JOptionPane.showMessageDialog(null, "Por favor escriba valores positivos", "Atención",JOptionPane.WARNING_MESSAGE); 
                    }
                    else{
                        boolean diferente=true;
                        for(Producto p:productos){
                            if(b.toUpperCase().equals(p.getNombre().toUpperCase())&&c.toUpperCase().equals(p.getContenido().toUpperCase())&&d.toUpperCase().equals(p.getLinea().toUpperCase()))
                                diferente=false;
                        }
                        if(diferente){
                            int opcion = JOptionPane.showConfirmDialog(null, "¿Agregar el producto \""+b+"\" al inventario?", "Confirmar alta de producto", JOptionPane.YES_NO_OPTION);
                            if(opcion==0){                        
                                productos.add(new Producto(a,b,c,d,e,f)); 
                                prods_nuevos++;
                                dfm_AltaProducto.removeRow(i);
                            }   
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Ese producto ya existe en el inventario", "Atención",JOptionPane.WARNING_MESSAGE);
                        }
                    }
                }                              
            }
            catch(Throwable e){ datos_incorrectos=true; }             
        } 
        if(datos_incorrectos){
            JOptionPane.showMessageDialog(null, "Ingrese correctamente los datos", "Atención",JOptionPane.WARNING_MESSAGE); 
        }
        if(prods_nuevos==1){
            JOptionPane.showMessageDialog(null, "Producto agregado al inventario", "Información",JOptionPane.INFORMATION_MESSAGE); 
        }
        else if(prods_nuevos>1)
            JOptionPane.showMessageDialog(null, "Productos agregados al inventario", "Información",JOptionPane.INFORMATION_MESSAGE); 
        ActualizarProductos();
    }//GEN-LAST:event_jButton_AltaProducto_DarDeAltaActionPerformed

    private void jButton_BajaProducto_DarDeBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BajaProducto_DarDeBajaActionPerformed
        int rows[] = jTable_BajaProducto.getSelectedRows(); 
        String s="";
        int prods_removidos=0;
        for(int r=rows.length-1;r>=0;r--){
            String nom=dfm_BajaProducto.getValueAt(rows[r],1).toString();
            int opcion = JOptionPane.showConfirmDialog(null, "¿Remover el producto \""+nom+"\" del inventario?", "Confirmar baja", JOptionPane.YES_NO_OPTION);
            if(opcion==0){                         
                dfm_BajaProducto.removeRow(rows[r]);
                for(int i=0;i<productos.size();i++){
                    if(productos.get(i).getNombre().equals(nom)){
                        productos.remove(productos.get(i));
                    }
                } 
                prods_removidos++;
            }
        }
        if(prods_removidos==1){
            JOptionPane.showMessageDialog(null, "Producto removido del inventario", "Información",JOptionPane.INFORMATION_MESSAGE); 
        }
        else if(prods_removidos>1)
            JOptionPane.showMessageDialog(null, "Productos removidos del inventario", "Información",JOptionPane.INFORMATION_MESSAGE); 
        ActualizarProductos();
    }//GEN-LAST:event_jButton_BajaProducto_DarDeBajaActionPerformed

    private void jButton_EntradaProducto_AgregarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EntradaProducto_AgregarEntradaActionPerformed
        int r = jTable_EntradaProducto.getSelectedRow(); 
        if(r<0)
            JOptionPane.showMessageDialog(null, "Seleccione la fila con la información del producto", "Atención",JOptionPane.WARNING_MESSAGE);
        else{
            if(jTextField_EntradaProducto_EntradasProducto.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Escriba la cantidad de entradas del producto", "Atención",JOptionPane.WARNING_MESSAGE);
            }
            else{
                String cantidad_s=jTextField_EntradaProducto_EntradasProducto.getText();
                int longitud=cantidad_s.length();
                if(longitud>=5){
                    JOptionPane.showMessageDialog(null, "Ingrese una cantidad con menos de 5 digitos","Atención",JOptionPane.WARNING_MESSAGE); 
                }
                else{
                    int entradas=Integer.parseInt(jTextField_EntradaProducto_EntradasProducto.getText());
                    int opcion = JOptionPane.showConfirmDialog(null, "¿Agregar "+entradas+" entrada(s)?", "Confirmar entradas", JOptionPane.YES_NO_OPTION);
                    if(opcion==0){
                        int num=Integer.parseInt(dfm_EntradaProducto.getValueAt(r,0).toString());                   
                        for(Producto p :productos){
                            if(entradas<0){
                                JOptionPane.showMessageDialog(null, "Por favor escriba valores positivos", "Atención",JOptionPane.WARNING_MESSAGE); 
                            }
                            else{
                                if(p.getNumero()==num){
                                    p.setExistencia(p.getExistencia()+entradas);
                                    dfm_EntradaProducto.setValueAt(p.getExistencia(), r, 4);
                                    JOptionPane.showMessageDialog(null, "El inventario ha sido actualizado exitósamente", "Información",JOptionPane.INFORMATION_MESSAGE); 
                                }
                            }
                        }   
                        jTextField_EntradaProducto_EntradasProducto.setText(null);  
                    }
                }
            }
        }  
        ActualizarProductos();
    }//GEN-LAST:event_jButton_EntradaProducto_AgregarEntradaActionPerformed

    private void jButton_SalidaProducto_VenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SalidaProducto_VenderActionPerformed
        if(jTable_SalidaProducto_Venta.getRowCount()>0){
            int opcion = JOptionPane.showConfirmDialog(null, "¿Proceder con la venta?", "Confirmar venta", JOptionPane.YES_NO_OPTION);
            if(opcion==0){
                Calendar calendario = Calendar.getInstance();
                String dia=String.valueOf(calendario.get(Calendar.DAY_OF_MONTH));
                String mes=String.valueOf(calendario.get(Calendar.MONTH)+1);
                String año=String.valueOf(calendario.get(Calendar.YEAR));       
                if(Integer.valueOf(dia)<10)
                    dia="0"+dia;
                if(Integer.valueOf(mes)<10)
                    mes="0"+mes;         
                String fecha=dia+"/"+mes+"/"+año;
                String prods="";
                for(int i=0;i<dfm_SalidaProducto_Venta.getRowCount();i++){
                    int cantidad=Integer.parseInt(dfm_SalidaProducto_Venta.getValueAt(i, 3).toString());
                    float total = Float.valueOf(dfm_SalidaProducto_Venta.getValueAt(i, 4).toString());
                    int numero_producto=0;
                    for(Producto p :productos){
                        if(p.getNombre().equals(dfm_SalidaProducto_Venta.getValueAt(i, 0).toString())){
                            p.setExistencia(p.getExistencia()-cantidad);
                            numero_producto=p.getNumero();
                        }                   
                    }
                    Cliente c = new Cliente(nuevo_cliente, numero_producto, cantidad, total, fecha);
                    clientes.add(c);               
                }  
                ActualizarClientes();
                ActualizarProductos();
                jTextField_SalidaProducto_Total.setText("$ 00.00");
                JOptionPane.showMessageDialog(null, "La venta se ha concretado con éxito","Información",JOptionPane.INFORMATION_MESSAGE); 
                Nuevo_Cliente();
                jLabel14.setText("Cliente del día: "+nuevo_cliente);
                while(dfm_SalidaProducto_Venta.getRowCount() > 0){dfm_SalidaProducto_Venta.removeRow(0);}
                while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
                for(Producto p: productos){
                    if(p.getExistencia()>0)
                        dfm_SalidaProducto_Inventario.addRow(new Object[]{p.getNombre(),p.getContenido(),p.getPrecio()});
                }  
            }                 
        }            
    }//GEN-LAST:event_jButton_SalidaProducto_VenderActionPerformed
     
    private void jButton_CambiosProducto_GuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CambiosProducto_GuardarCambiosActionPerformed
        if(jTable_CambiosProducto.isEditing())
            jTable_CambiosProducto.getCellEditor().stopCellEditing();  
        int nprods=0;
        for(int i=0;i<rows_de_prods_seleccionados.size();i++){
            try{
                int num=Integer.parseInt(dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),0).toString());
                String nombre=dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),1).toString();
                String contenido=dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),2).toString();
                String linea=dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),3).toString(); 
                int existencia=Integer.parseInt(dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),4).toString());
                Double precio=Double.parseDouble(dfm_CambiosProducto.getValueAt(rows_de_prods_seleccionados.get(i),5).toString());            
                if(nombre.contains("|")||contenido.contains("|")||linea.contains("|"))
                    JOptionPane.showMessageDialog(null, "Por favor evite el uso del caracter \"|\" en los datos del producto \""+prods_originales.get(i)+"\"", "Atención",JOptionPane.WARNING_MESSAGE);
                else{
                    if(num<0||existencia<0||precio<0){
                       JOptionPane.showMessageDialog(null, "Por favor escriba valores positivos", "Atención",JOptionPane.WARNING_MESSAGE); 
                    }
                    else{
                        if(nombre.endsWith(" ")||contenido.endsWith(" ")||linea.endsWith(" ")||nombre.equals("")||contenido.equals("")||linea.equals(""))
                            JOptionPane.showMessageDialog(null, "Por favor no deje valores en blanco", "Atención",JOptionPane.WARNING_MESSAGE);  
                        else{ 
                            boolean diferente=true;
                            for(Producto p:productos){ 
                                if(nombre.toUpperCase().equals(p.getNombre().toUpperCase())&&contenido.toUpperCase().equals(p.getContenido().toUpperCase())&&linea.toUpperCase().equals(p.getLinea().toUpperCase())){
                                    if(num!=p.getNumero())
                                        diferente=false;
                                }
                            }
                            if(diferente){
                                String p_n=String.valueOf(num)+String.valueOf(nombre)+contenido+linea+String.valueOf(existencia)+String.valueOf(precio);
                                String p_o=String.valueOf(prods_originales.get(i).getNumero())+prods_originales.get(i).getNombre()+String.valueOf(prods_originales.get(i).getContenido())+String.valueOf(prods_originales.get(i).getLinea())+String.valueOf(prods_originales.get(i).getExistencia())+String.valueOf(prods_originales.get(i).getPrecio());
                                if(!p_n.equals(p_o)){
                                    int opcion = JOptionPane.showConfirmDialog(null, "¿Guardar los cambios hechos al producto \""+prods_originales.get(i).getNombre()+"\"?", "Confirmar cambios", JOptionPane.YES_NO_OPTION);
                                    if(opcion==0){
                                        Producto producto_nuevo=new Producto(num,nombre,contenido,linea,existencia,precio);                                  
                                        for(int j=0;j<productos.size();j++){
                                            if(productos.get(j).getNumero()==prods_originales.get(i).getNumero())
                                                productos.set(j, producto_nuevo);
                                        }
                                        nprods++;
                                    }
                                }
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Ese producto ya existe en el inventario", "Atención",JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Ingrese correctamente los datos", "Atención",JOptionPane.WARNING_MESSAGE);
            }                                    
        }
        if(nprods>0){
            JOptionPane.showMessageDialog(null, "Los cambios han sido guardados", "Información",JOptionPane.INFORMATION_MESSAGE); 
            ActualizarProductos();
        }            
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}    
        for(Producto p: productos){
            dfm_CambiosProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
        rows_de_prods_seleccionados.clear(); 
        prods_originales.clear();
    }//GEN-LAST:event_jButton_CambiosProducto_GuardarCambiosActionPerformed
   
    private void jButton_AbrirMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbrirMenuPrincipalActionPerformed
        while(dfm_AltaProducto.getRowCount() > 0){dfm_AltaProducto.removeRow(0);}
        while(dfm_BajaProducto.getRowCount() > 0){dfm_BajaProducto.removeRow(0);}
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
        while(dfm_SalidaProducto_Venta.getRowCount() > 0){dfm_SalidaProducto_Venta.removeRow(0);}
        while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
        while(dfm_EntradaProducto.getRowCount() > 0){dfm_EntradaProducto.removeRow(0);}
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}
        row_inventario=-1;
        Menu.Menu_Principal mi = new Menu.Menu_Principal();
        this.dispose();
        mi.setVisible(true);
    }//GEN-LAST:event_jButton_AbrirMenuPrincipalActionPerformed

    private void jButton_AltaProducto_NuevoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProducto_NuevoProductoActionPerformed
        List<Integer> ids = new ArrayList<>();
        for(Producto p:productos){
            ids.add(p.getNumero());
        }
        if(dfm_AltaProducto.getRowCount()>0){
            for(int i=0;i<dfm_AltaProducto.getRowCount();i++){
                Integer id=Integer.valueOf(dfm_AltaProducto.getValueAt(i,0).toString());
                ids.add(id);    
            }
        }    
        
        int nuevo_id=0;     
        Collections.sort(ids);
        if(!ids.isEmpty()){
            for(int i=1;i<=ids.size();i++){ 
                if(ids.get(i-1)!=i){
                    nuevo_id=i; break;
                }
                else if(i==ids.size())
                    nuevo_id=i+1;          
            } 
        }
        else{
            nuevo_id=1; 
        }
        
        dfm_AltaProducto.addRow(new Object[]{nuevo_id,null,null,"Coca-Cola",null,null});
        
        TableColumn testColumn = jTable_AltaProducto.getColumnModel().getColumn(3);
        JComboBox<String> jComboBox_Linea = new JComboBox<>();
        for(Proveedor p:proveedores){
            jComboBox_Linea.addItem(p.getNombre()); 
        }    
        testColumn.setCellEditor(new DefaultCellEditor(jComboBox_Linea));   
    }//GEN-LAST:event_jButton_AltaProducto_NuevoProductoActionPerformed

    private void jButton_AltaProducto_LimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProducto_LimpiarTablaActionPerformed
        while(dfm_AltaProducto.getRowCount() > 0){dfm_AltaProducto.removeRow(0);}
    }//GEN-LAST:event_jButton_AltaProducto_LimpiarTablaActionPerformed

    private void jButton_AltaProducto_RemoverProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AltaProducto_RemoverProductoActionPerformed
        int fila=jTable_AltaProducto.getSelectedRow();
        if(fila>=0)
            dfm_AltaProducto.removeRow(fila);
    }//GEN-LAST:event_jButton_AltaProducto_RemoverProductoActionPerformed

    private void jPanel_BajaProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_BajaProductoComponentShown
        for(Producto p: productos){
            if(p.getExistencia()==0)
                dfm_BajaProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
    }//GEN-LAST:event_jPanel_BajaProductoComponentShown

    private void jPanel_BajaProductoComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_BajaProductoComponentHidden
        while(dfm_BajaProducto.getRowCount() > 0){dfm_BajaProducto.removeRow(0);}
    }//GEN-LAST:event_jPanel_BajaProductoComponentHidden

    private void jTextField_BajaProducto_NombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BajaProducto_NombreProductoKeyTyped
        while(dfm_BajaProducto.getRowCount() > 0){dfm_BajaProducto.removeRow(0);}
        String s = jTextField_BajaProducto_NombreProducto.getText();
        for(Producto p: productos){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
                dfm_BajaProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
        if(dfm_BajaProducto.getRowCount()==1){
            jTable_BajaProducto.setRowSelectionInterval(0,0);
        }
    }//GEN-LAST:event_jTextField_BajaProducto_NombreProductoKeyTyped

    private void jTextField_EntradaProducto_NombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EntradaProducto_NombreProductoKeyTyped
        while(dfm_EntradaProducto.getRowCount() > 0){dfm_EntradaProducto.removeRow(0);}
        String s = jTextField_EntradaProducto_NombreProducto.getText();
        for(Producto p: productos){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
                dfm_EntradaProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
        if(dfm_EntradaProducto.getRowCount()==1){
            jTable_EntradaProducto.setRowSelectionInterval(0,0);
        }
    }//GEN-LAST:event_jTextField_EntradaProducto_NombreProductoKeyTyped

    private void jTextField_CambiosProducto_NombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_CambiosProducto_NombreProductoKeyTyped
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}
        String s = jTextField_CambiosProducto_NombreProducto.getText();
        for(Producto p: productos){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
                dfm_CambiosProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
        if(dfm_CambiosProducto.getRowCount()==1){
            jTable_CambiosProducto.setRowSelectionInterval(0,0);
        }
        rows_de_prods_seleccionados.clear();
    }//GEN-LAST:event_jTextField_CambiosProducto_NombreProductoKeyTyped

    private void jPanel_EntradaProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_EntradaProductoComponentShown
        for(Producto p: productos){
            dfm_EntradaProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
    }//GEN-LAST:event_jPanel_EntradaProductoComponentShown

    private void jPanel_EntradaProductoComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_EntradaProductoComponentHidden
        while(dfm_EntradaProducto.getRowCount() > 0){dfm_EntradaProducto.removeRow(0);}
    }//GEN-LAST:event_jPanel_EntradaProductoComponentHidden

    private void jPanel_CambiosProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_CambiosProductoComponentShown
        for(Producto p: productos){
            TableColumn testColumn = jTable_CambiosProducto.getColumnModel().getColumn(3);
            JComboBox<String> jComboBox_Linea = new JComboBox<>();
            for(Proveedor prov:proveedores){
                jComboBox_Linea.addItem(prov.getNombre()); 
            }    
            testColumn.setCellEditor(new DefaultCellEditor(jComboBox_Linea));   
            dfm_CambiosProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }
    }//GEN-LAST:event_jPanel_CambiosProductoComponentShown

    private void jPanel_CambiosProductoComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_CambiosProductoComponentHidden
        while(dfm_CambiosProducto.getRowCount() > 0){dfm_CambiosProducto.removeRow(0);}
    }//GEN-LAST:event_jPanel_CambiosProductoComponentHidden

    private void jPanel_SalidaProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_SalidaProductoComponentShown
        jTextField_SalidaProducto_NombreProducto.requestFocusInWindow();
        for(Producto p: productos){
            if(p.getExistencia()>0)
                dfm_SalidaProducto_Inventario.addRow(new Object[]{p.getNombre(),p.getContenido(),p.getPrecio()});
        }    
    }//GEN-LAST:event_jPanel_SalidaProductoComponentShown

    private void jPanel_SalidaProductoComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_SalidaProductoComponentHidden
        while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
    }//GEN-LAST:event_jPanel_SalidaProductoComponentHidden

    private void jTable_SalidaProducto_InventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SalidaProducto_InventarioMouseClicked
        int r=jTable_SalidaProducto_Inventario.getSelectedRow();
        if(r>-1){
            row_inventario=jTable_SalidaProducto_Inventario.getSelectedRow();
            jTable_SalidaProducto_Inventario.setVisible(false);
            Cantidad_Productos fc = new Cantidad_Productos();
            fc.setAlwaysOnTop(true);
            jButton_SalidaProducto_Vender.setEnabled(false);
            fc.setVisible(true);           
        }           
    }//GEN-LAST:event_jTable_SalidaProducto_InventarioMouseClicked
  
    private void jButton_ConsultasProducto_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConsultasProducto_ConsultarActionPerformed
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
        switch (jComboBox_ConsultasProducto_SeleccionarCriterio.getSelectedIndex()) {
            case 1:
                for(Producto p:productos){
                    if(!jTextField_ConsultasProducto_ValorCriterio.getText().equals("")){
                        if(p.getNumero()==Integer.parseInt(jTextField_ConsultasProducto_ValorCriterio.getText()))         
                            dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                    }
                    else
                        dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                }   if(jCheckBox_ConsultasProducto_Descendente.isSelected()){
                    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dfm_ConsultasProducto);
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(0, SortOrder.DESCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultasProducto.setRowSorter(sorter);
                }
                else{
                    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dfm_ConsultasProducto);
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultasProducto.setRowSorter(sorter);
                }   break;
            case 2:
                for(Producto p:productos){
                    if(!jTextField_ConsultasProducto_ValorCriterio.getText().equals("")){
                        if(p.getNombre().toUpperCase().contains(jTextField_ConsultasProducto_ValorCriterio.getText().toUpperCase()))
                            dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                    }
                    else
                        dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                }   if(jCheckBox_ConsultasProducto_Descendente.isSelected()){
                    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dfm_ConsultasProducto);
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(1, SortOrder.DESCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultasProducto.setRowSorter(sorter);         
                }
                else{
                    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dfm_ConsultasProducto);
                    List<RowSorter.SortKey> sortKeys = new ArrayList<>();
                    sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING));
                    sorter.setSortKeys(sortKeys);
                    jTable_ConsultasProducto.setRowSorter(sorter);
                }   break;
            case 3:
                for(Producto p:productos){
                    if(p.getContenido().toUpperCase().contains(jTextField_ConsultasProducto_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                }   break;
            case 4:
                for(Producto p:productos){
                    if(p.getLinea().toUpperCase().contains(jTextField_ConsultasProducto_ValorCriterio.getText().toUpperCase()))
                        dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                }   break;
            case 5:
                for(Producto p:productos){
                    if(p.getExistencia()==Integer.parseInt(jTextField_ConsultasProducto_ValorCriterio.getText()))
                        dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
                }   break;          
        }
    }//GEN-LAST:event_jButton_ConsultasProducto_ConsultarActionPerformed

    private void jButton_ConsultasProdcto_LimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConsultasProdcto_LimpiarTablaActionPerformed
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
    }//GEN-LAST:event_jButton_ConsultasProdcto_LimpiarTablaActionPerformed

    private void jButton_SalidaProducto_LimpiarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SalidaProducto_LimpiarListaActionPerformed
        jTextField_SalidaProducto_Total.setText("$ 00.00");
        while(dfm_SalidaProducto_Venta.getRowCount() > 0){dfm_SalidaProducto_Venta.removeRow(0);}
    }//GEN-LAST:event_jButton_SalidaProducto_LimpiarListaActionPerformed

    private void jTextField_EntradaProducto_EntradasProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EntradaProducto_EntradasProductoKeyTyped
        char vchar=evt.getKeyChar();
        if(!(Character.isDigit(vchar))||(vchar==KeyEvent.VK_BACK_SPACE)||(vchar==KeyEvent.VK_DELETE)){
            evt.consume();
        }   
    }//GEN-LAST:event_jTextField_EntradaProducto_EntradasProductoKeyTyped

    private void jTable_SalidaProducto_VentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SalidaProducto_VentaMouseClicked
        int j=jTable_SalidaProducto_Venta.getSelectedRow();
        if(j>-1)
            dfm_SalidaProducto_Venta.removeRow(j);
        double total=0;
        for(int i=0;i<dfm_SalidaProducto_Venta.getRowCount();i++){
            total+=Double.parseDouble(dfm_SalidaProducto_Venta.getValueAt(i,4).toString());
        }
        jTextField_SalidaProducto_Total.setText("$ "+String.valueOf(total));
    }//GEN-LAST:event_jTable_SalidaProducto_VentaMouseClicked

    private void jTextField_SalidaProducto_NombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SalidaProducto_NombreProductoKeyTyped
        while(dfm_SalidaProducto_Inventario.getRowCount() > 0){dfm_SalidaProducto_Inventario.removeRow(0);}
        String s = jTextField_SalidaProducto_NombreProducto.getText();
        for(Producto p: productos){
            if(p.getNombre().toLowerCase().contains(s.toLowerCase()))
                dfm_SalidaProducto_Inventario.addRow(new Object[]{p.getNombre(),p.getContenido(),p.getPrecio()});
        }
        if(dfm_SalidaProducto_Inventario.getRowCount()==1){
            jTable_SalidaProducto_Inventario.setRowSelectionInterval(0,0);
            row_inventario=jTable_SalidaProducto_Inventario.getSelectedRow();
            Cantidad_Productos fc = new Cantidad_Productos();
            fc.setVisible(true); 
        }    
    }//GEN-LAST:event_jTextField_SalidaProducto_NombreProductoKeyTyped

    private void jTextField_SalidaProducto_NombreProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_SalidaProducto_NombreProductoMouseClicked
        jTextField_SalidaProducto_NombreProducto.setText("");
    }//GEN-LAST:event_jTextField_SalidaProducto_NombreProductoMouseClicked

    private void jComboBox_ConsultasProducto_SeleccionarCriterioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ConsultasProducto_SeleccionarCriterioItemStateChanged
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
        int index=jComboBox_ConsultasProducto_SeleccionarCriterio.getSelectedIndex();
        if(index==0){        
            jCheckBox_ConsultasProducto_Descendente.setEnabled(false);
            jButton_ConsultasProducto_Consultar.setEnabled(false);
            jTextField_ConsultasProducto_ValorCriterio.setEnabled(false);
            for(Producto p:productos){
                dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
            }            
        }
        else if(index==3||index==4||index==5){
            jCheckBox_ConsultasProducto_Descendente.setEnabled(false);
            jButton_ConsultasProducto_Consultar.setEnabled(true);
            jTextField_ConsultasProducto_ValorCriterio.setEnabled(true);
        }
        else{
            jButton_ConsultasProducto_Consultar.setEnabled(true);
            jTextField_ConsultasProducto_ValorCriterio.setEnabled(true);
            jCheckBox_ConsultasProducto_Descendente.setEnabled(true);
        }
        jTextField_ConsultasProducto_ValorCriterio.setText("");
    }//GEN-LAST:event_jComboBox_ConsultasProducto_SeleccionarCriterioItemStateChanged

    private void jPanel_ConsultasProductoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_ConsultasProductoComponentShown
        for(Producto p: productos){
            dfm_ConsultasProducto.addRow(new Object[]{p.getNumero(),p.getNombre(),p.getContenido(),p.getLinea(),p.getExistencia(),p.getPrecio()});
        }  
    }//GEN-LAST:event_jPanel_ConsultasProductoComponentShown

    private void jPanel_ConsultasProductoComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel_ConsultasProductoComponentHidden
        while(dfm_ConsultasProducto.getRowCount() > 0){dfm_ConsultasProducto.removeRow(0);}
    }//GEN-LAST:event_jPanel_ConsultasProductoComponentHidden

    private void jTextField_EntradaProducto_EntradasProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_EntradaProducto_EntradasProductoKeyPressed
        if(jTextField_EntradaProducto_EntradasProducto.getText().length()>=7)
        {
            jTextField_EntradaProducto_EntradasProducto.setText(jTextField_EntradaProducto_EntradasProducto.getText().substring(0, 4));
        }
    }//GEN-LAST:event_jTextField_EntradaProducto_EntradasProductoKeyPressed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sis_Encargado_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sis_Encargado_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sis_Encargado_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sis_Encargado_Productos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sis_Encargado_Productos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AbrirMenuPrincipal;
    private javax.swing.JButton jButton_AbrirModuloClientes;
    private javax.swing.JButton jButton_AbrirModuloProveedores;
    private javax.swing.JButton jButton_AltaProducto_DarDeAlta;
    private javax.swing.JButton jButton_AltaProducto_LimpiarTabla;
    private javax.swing.JButton jButton_AltaProducto_NuevoProducto;
    private javax.swing.JButton jButton_AltaProducto_RemoverProducto;
    private javax.swing.JButton jButton_BajaProducto_DarDeBaja;
    private javax.swing.JButton jButton_CambiosProducto_GuardarCambios;
    private javax.swing.JButton jButton_ConsultasProdcto_LimpiarTabla;
    private javax.swing.JButton jButton_ConsultasProducto_Consultar;
    private javax.swing.JButton jButton_EntradaProducto_AgregarEntrada;
    private javax.swing.JButton jButton_SalidaProducto_LimpiarLista;
    public static javax.swing.JButton jButton_SalidaProducto_Vender;
    private javax.swing.JCheckBox jCheckBox_ConsultasProducto_Descendente;
    private javax.swing.JComboBox<String> jComboBox_ConsultasProducto_SeleccionarCriterio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel_AltaProducto;
    private javax.swing.JPanel jPanel_BajaProducto;
    private javax.swing.JPanel jPanel_CambiosProducto;
    private javax.swing.JPanel jPanel_ConsultasProducto;
    private javax.swing.JPanel jPanel_EntradaProducto;
    private javax.swing.JPanel jPanel_SalidaProducto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    public static javax.swing.JTabbedPane jTabbedPane_EncargadoProductos;
    private javax.swing.JTable jTable_AltaProducto;
    private javax.swing.JTable jTable_BajaProducto;
    private javax.swing.JTable jTable_CambiosProducto;
    private javax.swing.JTable jTable_ConsultasProducto;
    private javax.swing.JTable jTable_EntradaProducto;
    public static javax.swing.JTable jTable_SalidaProducto_Inventario;
    public static javax.swing.JTable jTable_SalidaProducto_Venta;
    private javax.swing.JTextField jTextField_BajaProducto_NombreProducto;
    private javax.swing.JTextField jTextField_CambiosProducto_NombreProducto;
    private javax.swing.JTextField jTextField_ConsultasProducto_ValorCriterio;
    private javax.swing.JTextField jTextField_EntradaProducto_EntradasProducto;
    private javax.swing.JTextField jTextField_EntradaProducto_NombreProducto;
    public static javax.swing.JTextField jTextField_SalidaProducto_NombreProducto;
    public static javax.swing.JTextField jTextField_SalidaProducto_Total;
    // End of variables declaration//GEN-END:variables
}
